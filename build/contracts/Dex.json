{
  "contractName": "Dex",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "ticker",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "addTokenSupport",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "balances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "ticker",
          "type": "bytes32"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "depositEth",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextOrderId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "orderBook",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "internalType": "enum Dex.Side",
          "name": "side",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "ticker",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokenList",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "tokenMapping",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "ticker",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "ticker",
          "type": "bytes32"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawEth",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_ticker",
          "type": "bytes32"
        },
        {
          "internalType": "enum Dex.Side",
          "name": "_side",
          "type": "uint8"
        }
      ],
      "name": "getOrderBook",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "trader",
              "type": "address"
            },
            {
              "internalType": "enum Dex.Side",
              "name": "side",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "ticker",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            }
          ],
          "internalType": "struct Dex.Order[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum Dex.Side",
          "name": "_side",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "_ticker",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "createLimitOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"ticker\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"addTokenSupport\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum Dex.Side\",\"name\":\"_side\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"_ticker\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"createLimitOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"ticker\",\"type\":\"bytes32\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositEth\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_ticker\",\"type\":\"bytes32\"},{\"internalType\":\"enum Dex.Side\",\"name\":\"_side\",\"type\":\"uint8\"}],\"name\":\"getOrderBook\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"enum Dex.Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"ticker\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct Dex.Order[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextOrderId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"orderBook\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"enum Dex.Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"ticker\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenList\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"tokenMapping\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"ticker\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"ticker\",\"type\":\"bytes32\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawEth\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/C/Users/Matthew Watman/Desktop/Dev/IOTA/dex/contracts/Dex.sol\":\"Dex\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/Matthew Watman/Desktop/Dev/IOTA/dex/contracts/Dex.sol\":{\"keccak256\":\"0x365e2bfdcb31b61211fcaa5ee8549762fb36871df53e61803be35400a77f8c24\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7593227faa4c0076e75d6bbd466ff3dde14d420d4766f8f3bea730758b8d6a10\",\"dweb:/ipfs/QmVqWhZTk3FW3kjxbdvHEnHz1HBaJHWiGGGTy9kHirGcpG\"]},\"/C/Users/Matthew Watman/Desktop/Dev/IOTA/dex/contracts/Wallet.sol\":{\"keccak256\":\"0x0624c9e02814923b2cb36aea8f7d21361fe2a307d309b6b44f9a1c03f5f3c65a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3313053665b569094537e9a013ee898d6c52d13c321cdbfd07b367d17ee6fcd\",\"dweb:/ipfs/QmPfwRRri5TnHZnnp9WgYui7HZ6ymd5iwsPL83cVQPrQVU\"]},\"/C/Users/Matthew Watman/Desktop/Dev/IOTA/dex/node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x15e2d5bd4c28a88548074c54d220e8086f638a71ed07e6b3ba5a70066fcf458d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90faf5851c02f9bd42c5bfb54d4f0421a2612f50ab80b2c4fa24fa3792071cc2\",\"dweb:/ipfs/QmRGM4F2PcGVF85aTfaA9YBhCHHDqrMhRjyp6fGeBTtirb\"]},\"/C/Users/Matthew Watman/Desktop/Dev/IOTA/dex/node_modules/@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"/C/Users/Matthew Watman/Desktop/Dev/IOTA/dex/node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"/C/Users/Matthew Watman/Desktop/Dev/IOTA/dex/node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060006100216100c460201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3506100cc565b600033905090565b612713806100db6000396000f3fe6080604052600436106100e85760003560e01c80638c20f9e91161008a578063ba58ea6811610059578063ba58ea68146102d9578063c311d04914610316578063c9630cb01461033f578063f2fde38b14610368576100e8565b80638c20f9e91461021f5780638da5cb5b146102485780639ead722214610273578063a8d2021a146102b0576100e8565b8063439370b1116100c6578063439370b114610197578063667cb4ba146101a15780636f3b62f9146101df578063715018a614610208576100e8565b80630bb431b6146100ed5780631f14df691461012f5780632a58b3301461016c575b600080fd5b3480156100f957600080fd5b50610114600480360381019061010f91906121a3565b610391565b604051610126969594939291906124bf565b60405180910390f35b34801561013b57600080fd5b50610156600480360381019061015191906120c6565b610424565b60405161016391906124a4565b60405180910390f35b34801561017857600080fd5b50610181610449565b60405161018e91906124a4565b60405180910390f35b61019f61044f565b005b3480156101ad57600080fd5b506101c860048036038101906101c39190612102565b610548565b6040516101d692919061247b565b60405180910390f35b3480156101eb57600080fd5b50610206600480360381019061020191906121f2565b61058c565b005b34801561021457600080fd5b5061021d610f67565b005b34801561022b57600080fd5b506102466004803603810190610241919061212b565b6110d4565b005b34801561025457600080fd5b5061025d611242565b60405161026a9190612423565b60405180910390f35b34801561027f57600080fd5b5061029a60048036038101906102959190612255565b61126b565b6040516102a79190612460565b60405180910390f35b3480156102bc57600080fd5b506102d760048036038101906102d2919061227e565b61128f565b005b3480156102e557600080fd5b5061030060048036038101906102fb9190612167565b611594565b60405161030d919061243e565b60405180910390f35b34801561032257600080fd5b5061033d60048036038101906103389190612255565b6116ce565b005b34801561034b57600080fd5b506103666004803603810190610361919061227e565b6118f7565b005b34801561037457600080fd5b5061038f600480360381019061038a919061209d565b611cbe565b005b600560205282600052604060002060205281600052604060002081815481106103b957600080fd5b906000526020600020906005020160009250925050508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160149054906101000a900460ff16908060020154908060030154908060040154905086565b6003602052816000526040600020602052806000526040600020600091509150505481565b60045481565b6104d234600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060007f4554480000000000000000000000000000000000000000000000000000000000815260200190815260200160002054611eb090919063ffffffff16565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060007f4554480000000000000000000000000000000000000000000000000000000000815260200190815260200160002081905550565b60016020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082565b6000600181111561059957fe5b8460018111156105a557fe5b141561063b576105be8183611f3890919063ffffffff16565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060007f4554480000000000000000000000000000000000000000000000000000000000815260200190815260200160002054101561063a57600080fd5b5b60018081111561064757fe5b84600181111561065357fe5b14156106b75781600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008581526020019081526020016000205410156106b657600080fd5b5b60006005600085815260200190815260200160002060008660018111156106da57fe5b81526020019081526020016000209050806040518060c0016040528060045481526020013373ffffffffffffffffffffffffffffffffffffffff16815260200187600181111561072657fe5b81526020018681526020018581526020018481525090806001815401808255809150506001900390600052602060002090600502016000909190919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160146101000a81548160ff021916908360018111156107d957fe5b0217905550606082015181600201556080820151816003015560a0820151816004015550506000600181111561080b57fe5b85600181111561081757fe5b1415610ba8576000818054905090505b6000811115610ba25781600182038154811061083f57fe5b90600052602060002090600502016004015482828154811061085d57fe5b90600052602060002090600502016004015411806108b7575081600182038154811061088557fe5b9060005260206000209060050201600401548282815481106108a357fe5b906000526020600020906005020160040154145b156108c157610ba2565b8160018203815481106108d057fe5b9060005260206000209060050201600401548282815481106108ee57fe5b9060005260206000209060050201600401541015610b9457600082828154811061091457fe5b90600052602060002090600502016040518060c0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160149054906101000a900460ff1660018111156109ab57fe5b60018111156109b657fe5b8152602001600282015481526020016003820154815260200160048201548152505090508260018303815481106109e957fe5b9060005260206000209060050201838381548110610a0357fe5b9060005260206000209060050201600082015481600001556001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001820160149054906101000a900460ff168160010160146101000a81548160ff02191690836001811115610ab357fe5b021790555060028201548160020155600382015481600301556004820154816004015590505080836001840381548110610ae957fe5b90600052602060002090600502016000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160146101000a81548160ff02191690836001811115610b6c57fe5b0217905550606082015181600201556080820151816003015560a08201518160040155905050505b808060019003915050610827565b50610f4e565b600180811115610bb457fe5b856001811115610bc057fe5b1415610f4d576000818054905090505b6000811115610f4b57816001820381548110610be857fe5b906000526020600020906005020160040154828281548110610c0657fe5b9060005260206000209060050201600401541180610c605750816001820381548110610c2e57fe5b906000526020600020906005020160040154828281548110610c4c57fe5b906000526020600020906005020160040154145b15610c6a57610f4b565b816001820381548110610c7957fe5b906000526020600020906005020160040154828281548110610c9757fe5b9060005260206000209060050201600401541015610f3d576000828281548110610cbd57fe5b90600052602060002090600502016040518060c0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160149054906101000a900460ff166001811115610d5457fe5b6001811115610d5f57fe5b815260200160028201548152602001600382015481526020016004820154815250509050826001830381548110610d9257fe5b9060005260206000209060050201838381548110610dac57fe5b9060005260206000209060050201600082015481600001556001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001820160149054906101000a900460ff168160010160146101000a81548160ff02191690836001811115610e5c57fe5b021790555060028201548160020155600382015481600301556004820154816004015590505080836001840381548110610e9257fe5b90600052602060002090600502016000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160146101000a81548160ff02191690836001811115610f1557fe5b0217905550606082015181600201556080820151816003015560a08201518160040155905050505b808060019003915050610bd0565b505b5b6004600081548092919060010191905055505050505050565b610f6f611fbe565b73ffffffffffffffffffffffffffffffffffffffff16610f8d611242565b73ffffffffffffffffffffffffffffffffffffffff1614611016576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6110dc611fbe565b73ffffffffffffffffffffffffffffffffffffffff166110fa611242565b73ffffffffffffffffffffffffffffffffffffffff1614611183576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b60405180604001604052808381526020018273ffffffffffffffffffffffffffffffffffffffff16815250600160008481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505060028290806001815401808255809150506001900390600052602060002001600090919091909150555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6002818154811061127b57600080fd5b906000526020600020016000915090505481565b80600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561134c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806126bb6023913960400191505060405180910390fd5b82600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008481526020019081526020016000205410156113f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806126776023913960400191505060405180910390fd5b61145883600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002054611fc690919063ffffffff16565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020819055506001600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33856040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561155357600080fd5b505af1158015611567573d6000803e3d6000fd5b505050506040513d602081101561157d57600080fd5b810190808051906020019092919050505050505050565b60606005600084815260200190815260200160002060008360018111156115b757fe5b8152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b828210156116c257838290600052602060002090600502016040518060c0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160149054906101000a900460ff16600181111561168657fe5b600181111561169157fe5b81526020016002820154815260200160038201548152602001600482015481525050815260200190600101906115e5565b50505050905092915050565b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060007f45544800000000000000000000000000000000000000000000000000000000008152602001908152602001600020541015611797576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806126566021913960400191505060405180910390fd5b61181a81600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060007f4554480000000000000000000000000000000000000000000000000000000000815260200190815260200160002054611fc690919063ffffffff16565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060007f45544800000000000000000000000000000000000000000000000000000000008152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff168160405180600001905060006040518083038185875af1925050503d80600081146118ec576040519150601f19603f3d011682016040523d82523d6000602084013e6118f1565b606091505b50505050565b80600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156119b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806126bb6023913960400191505060405180910390fd5b826001600084815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015611a5257600080fd5b505afa158015611a66573d6000803e3d6000fd5b505050506040513d6020811015611a7c57600080fd5b81019080805190602001909291905050501015611b01576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f496e73756666696369656e742062616c616e636520666f72206465706f73697481525060200191505060405180910390fd5b611b6483600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002054611eb090919063ffffffff16565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020819055506001600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b158015611c7d57600080fd5b505af1158015611c91573d6000803e3d6000fd5b505050506040513d6020811015611ca757600080fd5b810190808051906020019092919050505050505050565b611cc6611fbe565b73ffffffffffffffffffffffffffffffffffffffff16611ce4611242565b73ffffffffffffffffffffffffffffffffffffffff1614611d6d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611df3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806126306026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080828401905083811015611f2e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600080831415611f4b5760009050611fb8565b6000828402905082848281611f5c57fe5b0414611fb3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018061269a6021913960400191505060405180910390fd5b809150505b92915050565b600033905090565b60008282111561203e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b818303905092915050565b600081359050612058816125da565b92915050565b60008135905061206d816125f1565b92915050565b60008135905061208281612608565b92915050565b60008135905061209781612618565b92915050565b6000602082840312156120af57600080fd5b60006120bd84828501612049565b91505092915050565b600080604083850312156120d957600080fd5b60006120e785828601612049565b92505060206120f88582860161205e565b9150509250929050565b60006020828403121561211457600080fd5b60006121228482850161205e565b91505092915050565b6000806040838503121561213e57600080fd5b600061214c8582860161205e565b925050602061215d85828601612049565b9150509250929050565b6000806040838503121561217a57600080fd5b60006121888582860161205e565b925050602061219985828601612073565b9150509250929050565b6000806000606084860312156121b857600080fd5b60006121c68682870161205e565b93505060206121d786828701612088565b92505060406121e886828701612088565b9150509250925092565b6000806000806080858703121561220857600080fd5b600061221687828801612073565b94505060206122278782880161205e565b935050604061223887828801612088565b925050606061224987828801612088565b91505092959194509250565b60006020828403121561226757600080fd5b600061227584828501612088565b91505092915050565b6000806040838503121561229157600080fd5b600061229f85828601612088565b92505060206122b08582860161205e565b9150509250929050565b60006122c6838361238a565b60c08301905092915050565b6122db81612559565b82525050565b6122ea81612559565b82525050565b60006122fb82612530565b6123058185612548565b935061231083612520565b8060005b8381101561234157815161232888826122ba565b97506123338361253b565b925050600181019050612314565b5085935050505092915050565b6123578161256b565b82525050565b6123668161256b565b82525050565b612375816125b2565b82525050565b612384816125b2565b82525050565b60c0820160008201516123a06000850182612405565b5060208201516123b360208501826122d2565b5060408201516123c6604085018261236c565b5060608201516123d9606085018261234e565b5060808201516123ec6080850182612405565b5060a08201516123ff60a0850182612405565b50505050565b61240e816125a8565b82525050565b61241d816125a8565b82525050565b600060208201905061243860008301846122e1565b92915050565b6000602082019050818103600083015261245881846122f0565b905092915050565b6000602082019050612475600083018461235d565b92915050565b6000604082019050612490600083018561235d565b61249d60208301846122e1565b9392505050565b60006020820190506124b96000830184612414565b92915050565b600060c0820190506124d46000830189612414565b6124e160208301886122e1565b6124ee604083018761237b565b6124fb606083018661235d565b6125086080830185612414565b61251560a0830184612414565b979650505050505050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600061256482612588565b9050919050565b6000819050919050565b6000819050612583826125c6565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006125bd82612575565b9050919050565bfe5b600281106125d7576125d66125c4565b5b50565b6125e381612559565b81146125ee57600080fd5b50565b6125fa8161256b565b811461260557600080fd5b50565b6002811061261557600080fd5b50565b612621816125a8565b811461262c57600080fd5b5056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373496e7375666669656e742062616c616e636520666f72207769746864726177616c496e73756666696369656e742062616c616e636520666f72207769746864726177616c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77546f6b656e206973206e6f7420737570706f7274656420617420746869732074696d65a26469706673582212204370eb6cebb04f0be934754ad0e648c0de1d00b17f5bb86d0d54dcdc265e6ae564736f6c63430007060033",
  "deployedBytecode": "0x6080604052600436106100e85760003560e01c80638c20f9e91161008a578063ba58ea6811610059578063ba58ea68146102d9578063c311d04914610316578063c9630cb01461033f578063f2fde38b14610368576100e8565b80638c20f9e91461021f5780638da5cb5b146102485780639ead722214610273578063a8d2021a146102b0576100e8565b8063439370b1116100c6578063439370b114610197578063667cb4ba146101a15780636f3b62f9146101df578063715018a614610208576100e8565b80630bb431b6146100ed5780631f14df691461012f5780632a58b3301461016c575b600080fd5b3480156100f957600080fd5b50610114600480360381019061010f91906121a3565b610391565b604051610126969594939291906124bf565b60405180910390f35b34801561013b57600080fd5b50610156600480360381019061015191906120c6565b610424565b60405161016391906124a4565b60405180910390f35b34801561017857600080fd5b50610181610449565b60405161018e91906124a4565b60405180910390f35b61019f61044f565b005b3480156101ad57600080fd5b506101c860048036038101906101c39190612102565b610548565b6040516101d692919061247b565b60405180910390f35b3480156101eb57600080fd5b50610206600480360381019061020191906121f2565b61058c565b005b34801561021457600080fd5b5061021d610f67565b005b34801561022b57600080fd5b506102466004803603810190610241919061212b565b6110d4565b005b34801561025457600080fd5b5061025d611242565b60405161026a9190612423565b60405180910390f35b34801561027f57600080fd5b5061029a60048036038101906102959190612255565b61126b565b6040516102a79190612460565b60405180910390f35b3480156102bc57600080fd5b506102d760048036038101906102d2919061227e565b61128f565b005b3480156102e557600080fd5b5061030060048036038101906102fb9190612167565b611594565b60405161030d919061243e565b60405180910390f35b34801561032257600080fd5b5061033d60048036038101906103389190612255565b6116ce565b005b34801561034b57600080fd5b506103666004803603810190610361919061227e565b6118f7565b005b34801561037457600080fd5b5061038f600480360381019061038a919061209d565b611cbe565b005b600560205282600052604060002060205281600052604060002081815481106103b957600080fd5b906000526020600020906005020160009250925050508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160149054906101000a900460ff16908060020154908060030154908060040154905086565b6003602052816000526040600020602052806000526040600020600091509150505481565b60045481565b6104d234600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060007f4554480000000000000000000000000000000000000000000000000000000000815260200190815260200160002054611eb090919063ffffffff16565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060007f4554480000000000000000000000000000000000000000000000000000000000815260200190815260200160002081905550565b60016020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082565b6000600181111561059957fe5b8460018111156105a557fe5b141561063b576105be8183611f3890919063ffffffff16565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060007f4554480000000000000000000000000000000000000000000000000000000000815260200190815260200160002054101561063a57600080fd5b5b60018081111561064757fe5b84600181111561065357fe5b14156106b75781600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008581526020019081526020016000205410156106b657600080fd5b5b60006005600085815260200190815260200160002060008660018111156106da57fe5b81526020019081526020016000209050806040518060c0016040528060045481526020013373ffffffffffffffffffffffffffffffffffffffff16815260200187600181111561072657fe5b81526020018681526020018581526020018481525090806001815401808255809150506001900390600052602060002090600502016000909190919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160146101000a81548160ff021916908360018111156107d957fe5b0217905550606082015181600201556080820151816003015560a0820151816004015550506000600181111561080b57fe5b85600181111561081757fe5b1415610ba8576000818054905090505b6000811115610ba25781600182038154811061083f57fe5b90600052602060002090600502016004015482828154811061085d57fe5b90600052602060002090600502016004015411806108b7575081600182038154811061088557fe5b9060005260206000209060050201600401548282815481106108a357fe5b906000526020600020906005020160040154145b156108c157610ba2565b8160018203815481106108d057fe5b9060005260206000209060050201600401548282815481106108ee57fe5b9060005260206000209060050201600401541015610b9457600082828154811061091457fe5b90600052602060002090600502016040518060c0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160149054906101000a900460ff1660018111156109ab57fe5b60018111156109b657fe5b8152602001600282015481526020016003820154815260200160048201548152505090508260018303815481106109e957fe5b9060005260206000209060050201838381548110610a0357fe5b9060005260206000209060050201600082015481600001556001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001820160149054906101000a900460ff168160010160146101000a81548160ff02191690836001811115610ab357fe5b021790555060028201548160020155600382015481600301556004820154816004015590505080836001840381548110610ae957fe5b90600052602060002090600502016000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160146101000a81548160ff02191690836001811115610b6c57fe5b0217905550606082015181600201556080820151816003015560a08201518160040155905050505b808060019003915050610827565b50610f4e565b600180811115610bb457fe5b856001811115610bc057fe5b1415610f4d576000818054905090505b6000811115610f4b57816001820381548110610be857fe5b906000526020600020906005020160040154828281548110610c0657fe5b9060005260206000209060050201600401541180610c605750816001820381548110610c2e57fe5b906000526020600020906005020160040154828281548110610c4c57fe5b906000526020600020906005020160040154145b15610c6a57610f4b565b816001820381548110610c7957fe5b906000526020600020906005020160040154828281548110610c9757fe5b9060005260206000209060050201600401541015610f3d576000828281548110610cbd57fe5b90600052602060002090600502016040518060c0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160149054906101000a900460ff166001811115610d5457fe5b6001811115610d5f57fe5b815260200160028201548152602001600382015481526020016004820154815250509050826001830381548110610d9257fe5b9060005260206000209060050201838381548110610dac57fe5b9060005260206000209060050201600082015481600001556001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001820160149054906101000a900460ff168160010160146101000a81548160ff02191690836001811115610e5c57fe5b021790555060028201548160020155600382015481600301556004820154816004015590505080836001840381548110610e9257fe5b90600052602060002090600502016000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160146101000a81548160ff02191690836001811115610f1557fe5b0217905550606082015181600201556080820151816003015560a08201518160040155905050505b808060019003915050610bd0565b505b5b6004600081548092919060010191905055505050505050565b610f6f611fbe565b73ffffffffffffffffffffffffffffffffffffffff16610f8d611242565b73ffffffffffffffffffffffffffffffffffffffff1614611016576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6110dc611fbe565b73ffffffffffffffffffffffffffffffffffffffff166110fa611242565b73ffffffffffffffffffffffffffffffffffffffff1614611183576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b60405180604001604052808381526020018273ffffffffffffffffffffffffffffffffffffffff16815250600160008481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505060028290806001815401808255809150506001900390600052602060002001600090919091909150555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6002818154811061127b57600080fd5b906000526020600020016000915090505481565b80600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561134c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806126bb6023913960400191505060405180910390fd5b82600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008481526020019081526020016000205410156113f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806126776023913960400191505060405180910390fd5b61145883600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002054611fc690919063ffffffff16565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020819055506001600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33856040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561155357600080fd5b505af1158015611567573d6000803e3d6000fd5b505050506040513d602081101561157d57600080fd5b810190808051906020019092919050505050505050565b60606005600084815260200190815260200160002060008360018111156115b757fe5b8152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b828210156116c257838290600052602060002090600502016040518060c0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160149054906101000a900460ff16600181111561168657fe5b600181111561169157fe5b81526020016002820154815260200160038201548152602001600482015481525050815260200190600101906115e5565b50505050905092915050565b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060007f45544800000000000000000000000000000000000000000000000000000000008152602001908152602001600020541015611797576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806126566021913960400191505060405180910390fd5b61181a81600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060007f4554480000000000000000000000000000000000000000000000000000000000815260200190815260200160002054611fc690919063ffffffff16565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060007f45544800000000000000000000000000000000000000000000000000000000008152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff168160405180600001905060006040518083038185875af1925050503d80600081146118ec576040519150601f19603f3d011682016040523d82523d6000602084013e6118f1565b606091505b50505050565b80600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156119b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806126bb6023913960400191505060405180910390fd5b826001600084815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015611a5257600080fd5b505afa158015611a66573d6000803e3d6000fd5b505050506040513d6020811015611a7c57600080fd5b81019080805190602001909291905050501015611b01576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f496e73756666696369656e742062616c616e636520666f72206465706f73697481525060200191505060405180910390fd5b611b6483600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002054611eb090919063ffffffff16565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020819055506001600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b158015611c7d57600080fd5b505af1158015611c91573d6000803e3d6000fd5b505050506040513d6020811015611ca757600080fd5b810190808051906020019092919050505050505050565b611cc6611fbe565b73ffffffffffffffffffffffffffffffffffffffff16611ce4611242565b73ffffffffffffffffffffffffffffffffffffffff1614611d6d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611df3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806126306026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080828401905083811015611f2e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600080831415611f4b5760009050611fb8565b6000828402905082848281611f5c57fe5b0414611fb3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018061269a6021913960400191505060405180910390fd5b809150505b92915050565b600033905090565b60008282111561203e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b818303905092915050565b600081359050612058816125da565b92915050565b60008135905061206d816125f1565b92915050565b60008135905061208281612608565b92915050565b60008135905061209781612618565b92915050565b6000602082840312156120af57600080fd5b60006120bd84828501612049565b91505092915050565b600080604083850312156120d957600080fd5b60006120e785828601612049565b92505060206120f88582860161205e565b9150509250929050565b60006020828403121561211457600080fd5b60006121228482850161205e565b91505092915050565b6000806040838503121561213e57600080fd5b600061214c8582860161205e565b925050602061215d85828601612049565b9150509250929050565b6000806040838503121561217a57600080fd5b60006121888582860161205e565b925050602061219985828601612073565b9150509250929050565b6000806000606084860312156121b857600080fd5b60006121c68682870161205e565b93505060206121d786828701612088565b92505060406121e886828701612088565b9150509250925092565b6000806000806080858703121561220857600080fd5b600061221687828801612073565b94505060206122278782880161205e565b935050604061223887828801612088565b925050606061224987828801612088565b91505092959194509250565b60006020828403121561226757600080fd5b600061227584828501612088565b91505092915050565b6000806040838503121561229157600080fd5b600061229f85828601612088565b92505060206122b08582860161205e565b9150509250929050565b60006122c6838361238a565b60c08301905092915050565b6122db81612559565b82525050565b6122ea81612559565b82525050565b60006122fb82612530565b6123058185612548565b935061231083612520565b8060005b8381101561234157815161232888826122ba565b97506123338361253b565b925050600181019050612314565b5085935050505092915050565b6123578161256b565b82525050565b6123668161256b565b82525050565b612375816125b2565b82525050565b612384816125b2565b82525050565b60c0820160008201516123a06000850182612405565b5060208201516123b360208501826122d2565b5060408201516123c6604085018261236c565b5060608201516123d9606085018261234e565b5060808201516123ec6080850182612405565b5060a08201516123ff60a0850182612405565b50505050565b61240e816125a8565b82525050565b61241d816125a8565b82525050565b600060208201905061243860008301846122e1565b92915050565b6000602082019050818103600083015261245881846122f0565b905092915050565b6000602082019050612475600083018461235d565b92915050565b6000604082019050612490600083018561235d565b61249d60208301846122e1565b9392505050565b60006020820190506124b96000830184612414565b92915050565b600060c0820190506124d46000830189612414565b6124e160208301886122e1565b6124ee604083018761237b565b6124fb606083018661235d565b6125086080830185612414565b61251560a0830184612414565b979650505050505050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600061256482612588565b9050919050565b6000819050919050565b6000819050612583826125c6565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006125bd82612575565b9050919050565bfe5b600281106125d7576125d66125c4565b5b50565b6125e381612559565b81146125ee57600080fd5b50565b6125fa8161256b565b811461260557600080fd5b50565b6002811061261557600080fd5b50565b612621816125a8565b811461262c57600080fd5b5056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373496e7375666669656e742062616c616e636520666f72207769746864726177616c496e73756666696369656e742062616c616e636520666f72207769746864726177616c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77546f6b656e206973206e6f7420737570706f7274656420617420746869732074696d65a26469706673582212204370eb6cebb04f0be934754ad0e648c0de1d00b17f5bb86d0d54dcdc265e6ae564736f6c63430007060033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:12062:9",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:87:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "69:29:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "91:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "78:12:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "78:20:9"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "69:5:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "134:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "107:26:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "107:33:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "107:33:9"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "37:6:9",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "45:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:9",
                "type": ""
              }
            ],
            "src": "7:139:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "204:87:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "214:29:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "236:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "223:12:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "223:20:9"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "214:5:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "279:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bytes32",
                      "nodeType": "YulIdentifier",
                      "src": "252:26:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "252:33:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "252:33:9"
                }
              ]
            },
            "name": "abi_decode_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "182:6:9",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "190:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "198:5:9",
                "type": ""
              }
            ],
            "src": "152:139:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "356:94:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "366:29:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "388:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "375:12:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "375:20:9"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "366:5:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "438:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_enum$_Side_$11",
                      "nodeType": "YulIdentifier",
                      "src": "404:33:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "404:40:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "404:40:9"
                }
              ]
            },
            "name": "abi_decode_t_enum$_Side_$11",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "334:6:9",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "342:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "350:5:9",
                "type": ""
              }
            ],
            "src": "297:153:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "508:87:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "518:29:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "540:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "527:12:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "527:20:9"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "518:5:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "583:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "556:26:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "556:33:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "556:33:9"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "486:6:9",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "494:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "502:5:9",
                "type": ""
              }
            ],
            "src": "456:139:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "667:196:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "713:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "722:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "725:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "715:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "715:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "715:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "688:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "697:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "684:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "684:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "709:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "680:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "680:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "677:2:9"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "739:117:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "754:15:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "768:1:9",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "758:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "783:63:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "818:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "829:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "814:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "814:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "838:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "793:20:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "793:53:9"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "783:6:9"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "637:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "648:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "660:6:9",
                "type": ""
              }
            ],
            "src": "601:262:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "952:324:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "998:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1007:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1010:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1000:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1000:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1000:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "973:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "982:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "969:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "969:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "994:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "965:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "965:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "962:2:9"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1024:117:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1039:15:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1053:1:9",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1043:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1068:63:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1103:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1114:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1099:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1099:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1123:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1078:20:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1078:53:9"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1068:6:9"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1151:118:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1166:16:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1180:2:9",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1170:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1196:63:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1231:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1242:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1227:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1227:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1251:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "1206:20:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1206:53:9"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1196:6:9"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "914:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "925:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "937:6:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "945:6:9",
                "type": ""
              }
            ],
            "src": "869:407:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1348:196:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1394:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1403:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1406:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1396:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1396:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1396:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1369:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1378:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1365:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1365:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1390:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1361:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1361:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "1358:2:9"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1420:117:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1435:15:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1449:1:9",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1439:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1464:63:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1499:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1510:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1495:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1495:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1519:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "1474:20:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1474:53:9"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1464:6:9"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1318:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1329:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1341:6:9",
                "type": ""
              }
            ],
            "src": "1282:262:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1633:324:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1679:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1688:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1691:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1681:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1681:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1681:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1654:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1663:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1650:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1650:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1675:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1646:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1646:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "1643:2:9"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1705:117:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1720:15:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1734:1:9",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1724:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1749:63:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1784:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1795:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1780:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1780:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1804:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "1759:20:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1759:53:9"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1749:6:9"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1832:118:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1847:16:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1861:2:9",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1851:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1877:63:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1912:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1923:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1908:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1908:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1932:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1887:20:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1887:53:9"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1877:6:9"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1595:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1606:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1618:6:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1626:6:9",
                "type": ""
              }
            ],
            "src": "1550:407:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2053:331:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2099:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2108:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2111:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2101:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2101:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2101:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2074:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2083:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2070:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2070:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2095:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2066:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2066:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "2063:2:9"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2125:117:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2140:15:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2154:1:9",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2144:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2169:63:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2204:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2215:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2200:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2200:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2224:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "2179:20:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2179:53:9"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2169:6:9"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2252:125:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2267:16:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2281:2:9",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2271:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2297:70:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2339:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2350:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2335:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2335:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2359:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_enum$_Side_$11",
                          "nodeType": "YulIdentifier",
                          "src": "2307:27:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2307:60:9"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2297:6:9"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_enum$_Side_$11",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2015:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2026:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2038:6:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2046:6:9",
                "type": ""
              }
            ],
            "src": "1963:421:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2490:452:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2536:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2545:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2548:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2538:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2538:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2538:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2511:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2520:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2507:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2507:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2532:2:9",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2503:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2503:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "2500:2:9"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2562:117:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2577:15:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2591:1:9",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2581:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2606:63:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2641:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2652:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2637:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2637:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2661:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "2616:20:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2616:53:9"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2606:6:9"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2689:118:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2704:16:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2718:2:9",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2708:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2734:63:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2769:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2780:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2765:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2765:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2789:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2744:20:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2744:53:9"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2734:6:9"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2817:118:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2832:16:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2846:2:9",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2836:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2862:63:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2897:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2908:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2893:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2893:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2917:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2872:20:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2872:53:9"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "2862:6:9"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2444:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2455:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2467:6:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2475:6:9",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2483:6:9",
                "type": ""
              }
            ],
            "src": "2390:552:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3072:588:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3119:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3128:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3131:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3121:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3121:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3121:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3093:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3102:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3089:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3089:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3114:3:9",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3085:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3085:33:9"
                  },
                  "nodeType": "YulIf",
                  "src": "3082:2:9"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3145:124:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3160:15:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3174:1:9",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3164:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3189:70:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3231:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3242:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3227:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3227:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3251:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_enum$_Side_$11",
                          "nodeType": "YulIdentifier",
                          "src": "3199:27:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3199:60:9"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3189:6:9"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3279:118:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3294:16:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3308:2:9",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3298:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3324:63:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3359:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3370:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3355:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3355:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3379:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "3334:20:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3334:53:9"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "3324:6:9"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3407:118:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3422:16:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3436:2:9",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3426:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3452:63:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3487:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3498:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3483:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3483:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3507:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3462:20:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3462:53:9"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "3452:6:9"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3535:118:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3550:16:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3564:2:9",
                        "type": "",
                        "value": "96"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3554:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3580:63:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3615:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3626:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3611:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3611:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3635:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3590:20:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3590:53:9"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "3580:6:9"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_enum$_Side_$11t_bytes32t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3018:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3029:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3041:6:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3049:6:9",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3057:6:9",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "3065:6:9",
                "type": ""
              }
            ],
            "src": "2948:712:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3732:196:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3778:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3787:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3790:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3780:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3780:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3780:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3753:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3762:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3749:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3749:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3774:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3745:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3745:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "3742:2:9"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3804:117:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3819:15:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3833:1:9",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3823:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3848:63:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3883:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3894:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3879:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3879:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3903:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3858:20:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3858:53:9"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3848:6:9"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3702:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3713:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3725:6:9",
                "type": ""
              }
            ],
            "src": "3666:262:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4017:324:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4063:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4072:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4075:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4065:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4065:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4065:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4038:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4047:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4034:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4034:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4059:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4030:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4030:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "4027:2:9"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4089:117:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4104:15:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4118:1:9",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4108:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4133:63:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4168:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4179:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4164:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4164:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4188:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "4143:20:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4143:53:9"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "4133:6:9"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4216:118:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4231:16:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4245:2:9",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4235:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4261:63:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4296:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4307:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4292:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4292:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4316:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "4271:20:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4271:53:9"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "4261:6:9"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3979:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3990:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4002:6:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4010:6:9",
                "type": ""
              }
            ],
            "src": "3934:407:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4469:141:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4555:6:9"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4563:3:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_struct$_Order_$24_memory_ptr_to_t_struct$_Order_$24_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "4479:75:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4479:88:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4479:88:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4576:28:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4594:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4599:4:9",
                        "type": "",
                        "value": "0xc0"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4590:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4590:14:9"
                  },
                  "variableNames": [
                    {
                      "name": "updatedPos",
                      "nodeType": "YulIdentifier",
                      "src": "4576:10:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encodeUpdatedPos_t_struct$_Order_$24_memory_ptr_to_t_struct$_Order_$24_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4442:6:9",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4450:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updatedPos",
                "nodeType": "YulTypedName",
                "src": "4458:10:9",
                "type": ""
              }
            ],
            "src": "4347:263:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4671:53:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4688:3:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4711:5:9"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "4693:17:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4693:24:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4681:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4681:37:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4681:37:9"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4659:5:9",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4666:3:9",
                "type": ""
              }
            ],
            "src": "4616:108:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4795:53:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4812:3:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4835:5:9"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "4817:17:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4817:24:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4805:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4805:37:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4805:37:9"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4783:5:9",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4790:3:9",
                "type": ""
              }
            ],
            "src": "4730:118:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5068:734:9",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5078:89:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5161:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_array$_t_struct$_Order_$24_memory_ptr_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "5092:68:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5092:75:9"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "5082:6:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5176:114:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5278:3:9"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5283:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_array$_t_struct$_Order_$24_memory_ptr_$dyn_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5183:94:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5183:107:9"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5176:3:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5299:92:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5385:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "array_dataslot_t_array$_t_struct$_Order_$24_memory_ptr_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "5314:70:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5314:77:9"
                  },
                  "variables": [
                    {
                      "name": "baseRef",
                      "nodeType": "YulTypedName",
                      "src": "5303:7:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5400:21:9",
                  "value": {
                    "name": "baseRef",
                    "nodeType": "YulIdentifier",
                    "src": "5414:7:9"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "5404:6:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5490:287:9",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "5504:34:9",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "5531:6:9"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "5525:5:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5525:13:9"
                        },
                        "variables": [
                          {
                            "name": "elementValue0",
                            "nodeType": "YulTypedName",
                            "src": "5508:13:9",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "5551:112:9",
                        "value": {
                          "arguments": [
                            {
                              "name": "elementValue0",
                              "nodeType": "YulIdentifier",
                              "src": "5644:13:9"
                            },
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "5659:3:9"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encodeUpdatedPos_t_struct$_Order_$24_memory_ptr_to_t_struct$_Order_$24_memory_ptr",
                            "nodeType": "YulIdentifier",
                            "src": "5558:85:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5558:105:9"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5551:3:9"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "5676:91:9",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "5760:6:9"
                            }
                          ],
                          "functionName": {
                            "name": "array_nextElement_t_array$_t_struct$_Order_$24_memory_ptr_$dyn_memory_ptr",
                            "nodeType": "YulIdentifier",
                            "src": "5686:73:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5686:81:9"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "5676:6:9"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "5452:1:9"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5455:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "5449:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5449:13:9"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "5463:18:9",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "5465:14:9",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "5474:1:9"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5477:1:9",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "5470:3:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5470:9:9"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "5465:1:9"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "5434:14:9",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "5436:10:9",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "5445:1:9",
                          "type": "",
                          "value": "0"
                        },
                        "variables": [
                          {
                            "name": "i",
                            "nodeType": "YulTypedName",
                            "src": "5440:1:9",
                            "type": ""
                          }
                        ]
                      }
                    ]
                  },
                  "src": "5430:347:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5786:10:9",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "5793:3:9"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5786:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_array$_t_struct$_Order_$24_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Order_$24_memory_ptr_$dyn_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5047:5:9",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5054:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5063:3:9",
                "type": ""
              }
            ],
            "src": "4902:900:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5863:53:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5880:3:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5903:5:9"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "5885:17:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5885:24:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5873:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5873:37:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5873:37:9"
                }
              ]
            },
            "name": "abi_encode_t_bytes32_to_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5851:5:9",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5858:3:9",
                "type": ""
              }
            ],
            "src": "5808:108:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5987:53:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6004:3:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6027:5:9"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "6009:17:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6009:24:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5997:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5997:37:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5997:37:9"
                }
              ]
            },
            "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5975:5:9",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5982:3:9",
                "type": ""
              }
            ],
            "src": "5922:118:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6106:71:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6123:3:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6164:5:9"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_enum$_Side_$11_to_t_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "6128:35:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6128:42:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6116:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6116:55:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6116:55:9"
                }
              ]
            },
            "name": "abi_encode_t_enum$_Side_$11_to_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6094:5:9",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6101:3:9",
                "type": ""
              }
            ],
            "src": "6046:131:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6253:71:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6270:3:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6311:5:9"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_enum$_Side_$11_to_t_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "6275:35:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6275:42:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6263:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6263:55:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6263:55:9"
                }
              ]
            },
            "name": "abi_encode_t_enum$_Side_$11_to_t_uint8_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6241:5:9",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6248:3:9",
                "type": ""
              }
            ],
            "src": "6183:141:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6472:1097:9",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6482:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6498:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6503:4:9",
                        "type": "",
                        "value": "0xc0"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6494:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6494:14:9"
                  },
                  "variables": [
                    {
                      "name": "tail",
                      "nodeType": "YulTypedName",
                      "src": "6486:4:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "6518:162:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "6551:43:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "6581:5:9"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6588:4:9",
                                "type": "",
                                "value": "0x00"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6577:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6577:16:9"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "6571:5:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6571:23:9"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "6555:12:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "6641:12:9"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "6659:3:9"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6664:4:9",
                                "type": "",
                                "value": "0x00"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6655:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6655:14:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "6607:33:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6607:63:9"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "6607:63:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "6690:166:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "6727:43:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "6757:5:9"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6764:4:9",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6753:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6753:16:9"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "6747:5:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6747:23:9"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "6731:12:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "6817:12:9"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "6835:3:9"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6840:4:9",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6831:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6831:14:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_address_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "6783:33:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6783:63:9"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "6783:63:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "6866:169:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "6901:43:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "6931:5:9"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6938:4:9",
                                "type": "",
                                "value": "0x40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6927:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6927:16:9"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "6921:5:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6921:23:9"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "6905:12:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "6996:12:9"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "7014:3:9"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7019:4:9",
                                "type": "",
                                "value": "0x40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7010:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7010:14:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_enum$_Side_$11_to_t_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "6957:38:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6957:68:9"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "6957:68:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "7045:166:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "7082:43:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "7112:5:9"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7119:4:9",
                                "type": "",
                                "value": "0x60"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7108:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7108:16:9"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "7102:5:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7102:23:9"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "7086:12:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "7172:12:9"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "7190:3:9"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7195:4:9",
                                "type": "",
                                "value": "0x60"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7186:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7186:14:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_bytes32_to_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "7138:33:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7138:63:9"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7138:63:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "7221:166:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "7258:43:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "7288:5:9"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7295:4:9",
                                "type": "",
                                "value": "0x80"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7284:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7284:16:9"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "7278:5:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7278:23:9"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "7262:12:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "7348:12:9"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "7366:3:9"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7371:4:9",
                                "type": "",
                                "value": "0x80"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7362:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7362:14:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "7314:33:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7314:63:9"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7314:63:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "7397:165:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "7433:43:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "7463:5:9"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7470:4:9",
                                "type": "",
                                "value": "0xa0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7459:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7459:16:9"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "7453:5:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7453:23:9"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "7437:12:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "7523:12:9"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "7541:3:9"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7546:4:9",
                                "type": "",
                                "value": "0xa0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7537:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7537:14:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "7489:33:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7489:63:9"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7489:63:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_struct$_Order_$24_memory_ptr_to_t_struct$_Order_$24_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6459:5:9",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6466:3:9",
                "type": ""
              }
            ],
            "src": "6374:1195:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7630:53:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7647:3:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "7670:5:9"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "7652:17:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7652:24:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7640:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7640:37:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7640:37:9"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7618:5:9",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7625:3:9",
                "type": ""
              }
            ],
            "src": "7575:108:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7754:53:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7771:3:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "7794:5:9"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "7776:17:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7776:24:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7764:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7764:37:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7764:37:9"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7742:5:9",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7749:3:9",
                "type": ""
              }
            ],
            "src": "7689:118:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7911:124:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7921:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7933:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7944:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7929:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7929:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7921:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8001:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8014:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8025:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8010:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8010:17:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7957:43:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7957:71:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7957:71:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7883:9:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7895:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7906:4:9",
                "type": ""
              }
            ],
            "src": "7813:222:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8231:267:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8241:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8253:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8264:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8249:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8249:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8241:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8288:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8299:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8284:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8284:17:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "8307:4:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8313:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8303:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8303:20:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8277:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8277:47:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8277:47:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8333:158:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8477:6:9"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "8486:4:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_array$_t_struct$_Order_$24_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Order_$24_memory_ptr_$dyn_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8341:135:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8341:150:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8333:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_array$_t_struct$_Order_$24_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Order_$24_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8203:9:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8215:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8226:4:9",
                "type": ""
              }
            ],
            "src": "8041:457:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8602:124:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8612:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8624:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8635:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8620:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8620:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8612:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8692:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8705:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8716:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8701:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8701:17:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8648:43:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8648:71:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8648:71:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8574:9:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8586:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8597:4:9",
                "type": ""
              }
            ],
            "src": "8504:222:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8858:206:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8868:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8880:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8891:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8876:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8876:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8868:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8948:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8961:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8972:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8957:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8957:17:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8904:43:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8904:71:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8904:71:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "9029:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9042:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9053:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9038:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9038:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8985:43:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8985:72:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8985:72:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8822:9:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8834:6:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8842:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8853:4:9",
                "type": ""
              }
            ],
            "src": "8732:332:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9168:124:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9178:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9190:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9201:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9186:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9186:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9178:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "9258:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9271:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9282:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9267:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9267:17:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9214:43:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9214:71:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9214:71:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9140:9:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9152:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9163:4:9",
                "type": ""
              }
            ],
            "src": "9070:222:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9541:542:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9551:27:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9563:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9574:3:9",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9559:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9559:19:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9551:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "9632:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9645:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9656:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9641:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9641:17:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9588:43:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9588:71:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9588:71:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "9713:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9726:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9737:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9722:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9722:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9669:43:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9669:72:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9669:72:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "9800:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9813:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9824:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9809:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9809:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_enum$_Side_$11_to_t_uint8_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9751:48:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9751:77:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9751:77:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "9882:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9895:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9906:2:9",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9891:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9891:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9838:43:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9838:72:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9838:72:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "9964:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9977:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9988:3:9",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9973:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9973:19:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9920:43:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9920:73:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9920:73:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value5",
                        "nodeType": "YulIdentifier",
                        "src": "10047:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10060:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10071:3:9",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10056:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10056:19:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10003:43:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10003:73:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10003:73:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_address_t_enum$_Side_$11_t_bytes32_t_uint256_t_uint256__to_t_uint256_t_address_t_uint8_t_bytes32_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9473:9:9",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "9485:6:9",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "9493:6:9",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "9501:6:9",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "9509:6:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "9517:6:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9525:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9536:4:9",
                "type": ""
              }
            ],
            "src": "9298:785:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10182:60:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10192:11:9",
                  "value": {
                    "name": "ptr",
                    "nodeType": "YulIdentifier",
                    "src": "10200:3:9"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "10192:4:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10213:22:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "10225:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10230:4:9",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10221:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10221:14:9"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "10213:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "array_dataslot_t_array$_t_struct$_Order_$24_memory_ptr_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "10169:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "10177:4:9",
                "type": ""
              }
            ],
            "src": "10089:153:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10343:40:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10354:22:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10370:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "10364:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10364:12:9"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "10354:6:9"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_array$_t_struct$_Order_$24_memory_ptr_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10326:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "10336:6:9",
                "type": ""
              }
            ],
            "src": "10248:135:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10485:38:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10495:22:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "10507:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10512:4:9",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10503:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10503:14:9"
                  },
                  "variableNames": [
                    {
                      "name": "next",
                      "nodeType": "YulIdentifier",
                      "src": "10495:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "array_nextElement_t_array$_t_struct$_Order_$24_memory_ptr_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "10472:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "next",
                "nodeType": "YulTypedName",
                "src": "10480:4:9",
                "type": ""
              }
            ],
            "src": "10389:134:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10661:73:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10678:3:9"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "10683:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10671:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10671:19:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10671:19:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10699:29:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10718:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10723:4:9",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10714:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10714:14:9"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "10699:11:9"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_array$_t_struct$_Order_$24_memory_ptr_$dyn_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "10633:3:9",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "10638:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "10649:11:9",
                "type": ""
              }
            ],
            "src": "10529:205:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10785:51:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10795:35:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10824:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "10806:17:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10806:24:9"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "10795:7:9"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10767:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "10777:7:9",
                "type": ""
              }
            ],
            "src": "10740:96:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10887:32:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10897:16:9",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "10908:5:9"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "10897:7:9"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10869:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "10879:7:9",
                "type": ""
              }
            ],
            "src": "10842:77:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10977:73:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10987:16:9",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "10998:5:9"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "10987:7:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "11038:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "validator_assert_t_enum$_Side_$11",
                      "nodeType": "YulIdentifier",
                      "src": "11004:33:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11004:40:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11004:40:9"
                }
              ]
            },
            "name": "cleanup_t_enum$_Side_$11",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10959:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "10969:7:9",
                "type": ""
              }
            ],
            "src": "10925:125:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11101:81:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11111:65:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "11126:5:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11133:42:9",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "11122:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11122:54:9"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "11111:7:9"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11083:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "11093:7:9",
                "type": ""
              }
            ],
            "src": "11056:126:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11233:32:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11243:16:9",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "11254:5:9"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "11243:7:9"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11215:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "11225:7:9",
                "type": ""
              }
            ],
            "src": "11188:77:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11336:60:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11346:44:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "11384:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_enum$_Side_$11",
                      "nodeType": "YulIdentifier",
                      "src": "11359:24:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11359:31:9"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "11346:9:9"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_enum$_Side_$11_to_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11316:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "11326:9:9",
                "type": ""
              }
            ],
            "src": "11271:125:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11425:25:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "functionName": {
                      "name": "invalid",
                      "nodeType": "YulIdentifier",
                      "src": "11435:7:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11435:9:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11435:9:9"
                }
              ]
            },
            "name": "panic_error",
            "nodeType": "YulFunctionDefinition",
            "src": "11402:48:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11506:57:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11540:17:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error",
                            "nodeType": "YulIdentifier",
                            "src": "11542:11:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11542:13:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11542:13:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "11529:5:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11536:1:9",
                            "type": "",
                            "value": "2"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "11526:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11526:12:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "11519:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11519:20:9"
                  },
                  "nodeType": "YulIf",
                  "src": "11516:2:9"
                }
              ]
            },
            "name": "validator_assert_t_enum$_Side_$11",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11499:5:9",
                "type": ""
              }
            ],
            "src": "11456:107:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11612:79:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11669:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11678:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11681:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "11671:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11671:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11671:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "11635:5:9"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "11660:5:9"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "11642:17:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11642:24:9"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "11632:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11632:35:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "11625:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11625:43:9"
                  },
                  "nodeType": "YulIf",
                  "src": "11622:2:9"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11605:5:9",
                "type": ""
              }
            ],
            "src": "11569:122:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11740:79:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11797:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11806:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11809:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "11799:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11799:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11799:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "11763:5:9"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "11788:5:9"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bytes32",
                              "nodeType": "YulIdentifier",
                              "src": "11770:17:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11770:24:9"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "11760:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11760:35:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "11753:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11753:43:9"
                  },
                  "nodeType": "YulIf",
                  "src": "11750:2:9"
                }
              ]
            },
            "name": "validator_revert_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11733:5:9",
                "type": ""
              }
            ],
            "src": "11697:122:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11875:56:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11909:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11918:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11921:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "11911:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11911:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11911:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "11898:5:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11905:1:9",
                            "type": "",
                            "value": "2"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "11895:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11895:12:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "11888:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11888:20:9"
                  },
                  "nodeType": "YulIf",
                  "src": "11885:2:9"
                }
              ]
            },
            "name": "validator_revert_t_enum$_Side_$11",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11868:5:9",
                "type": ""
              }
            ],
            "src": "11825:106:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11980:79:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12037:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12046:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12049:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "12039:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12039:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12039:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "12003:5:9"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "12028:5:9"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "12010:17:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12010:24:9"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "12000:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12000:35:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "11993:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11993:43:9"
                  },
                  "nodeType": "YulIf",
                  "src": "11990:2:9"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11973:5:9",
                "type": ""
              }
            ],
            "src": "11937:122:9"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_t_enum$_Side_$11(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_enum$_Side_$11(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_bytes32(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_enum$_Side_$11(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_enum$_Side_$11(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_enum$_Side_$11t_bytes32t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_enum$_Side_$11(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_bytes32(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_Order_$24_memory_ptr_to_t_struct$_Order_$24_memory_ptr(value0, pos) -> updatedPos {\n        abi_encode_t_struct$_Order_$24_memory_ptr_to_t_struct$_Order_$24_memory_ptr(value0, pos)\n        updatedPos := add(pos, 0xc0)\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    // struct Dex.Order[] -> struct Dex.Order[]\n    function abi_encode_t_array$_t_struct$_Order_$24_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Order_$24_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_Order_$24_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_Order_$24_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_struct$_Order_$24_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_struct$_Order_$24_memory_ptr_to_t_struct$_Order_$24_memory_ptr(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_struct$_Order_$24_memory_ptr_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_enum$_Side_$11_to_t_uint8(value, pos) {\n        mstore(pos, convert_t_enum$_Side_$11_to_t_uint8(value))\n    }\n\n    function abi_encode_t_enum$_Side_$11_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_Side_$11_to_t_uint8(value))\n    }\n\n    // struct Dex.Order -> struct Dex.Order\n    function abi_encode_t_struct$_Order_$24_memory_ptr_to_t_struct$_Order_$24_memory_ptr(value, pos)  {\n        let tail := add(pos, 0xc0)\n\n        {\n            // id\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // trader\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // side\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_enum$_Side_$11_to_t_uint8(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // ticker\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_bytes32_to_t_bytes32(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // amount\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // price\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xa0))\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_array$_t_struct$_Order_$24_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Order_$24_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_Order_$24_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Order_$24_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_address_t_enum$_Side_$11_t_bytes32_t_uint256_t_uint256__to_t_uint256_t_address_t_uint8_t_bytes32_t_uint256_t_uint256__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_enum$_Side_$11_to_t_uint8_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function array_dataslot_t_array$_t_struct$_Order_$24_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_length_t_array$_t_struct$_Order_$24_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_nextElement_t_array$_t_struct$_Order_$24_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_Order_$24_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_enum$_Side_$11(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_Side_$11(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_enum$_Side_$11_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_Side_$11(value)\n    }\n\n    function panic_error() {\n        invalid()\n    }\n\n    function validator_assert_t_enum$_Side_$11(value) {\n        if iszero(lt(value, 2)) { panic_error() }\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_enum$_Side_$11(value) {\n        if iszero(lt(value, 2)) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 9,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "129:2410:0:-:0;;;;;;;;;;;;;884:17:4;904:12;:10;;;:12;;:::i;:::-;884:32;;935:9;926:6;;:18;;;;;;;;;;;;;;;;;;992:9;959:43;;988:1;959:43;;;;;;;;;;;;850:159;129:2410:0;;598:104:8;651:15;685:10;678:17;;598:104;:::o;129:2410:0:-;;;;;;;",
  "deployedSourceMap": "129:2410:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;481:61;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;778:64:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;414:23:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2036:148:2;;;:::i;:::-;;545:45;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;702:1834:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1717:145:4;;;;;;;;;;;;;:::i;:::-;;917:184:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1085:85:4;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;597:26:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1685:343;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;551:143:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2196:297:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1284:393;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2011:240:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;481:61:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;778:64:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;414:23:0:-;;;;:::o;2036:148:2:-;2125:51;2166:9;2125:8;:20;2134:10;2125:20;;;;;;;;;;;;;;;:36;2146:14;2125:36;;;;;;;;;;;;:40;;:51;;;;:::i;:::-;2086:8;:20;2095:10;2086:20;;;;;;;;;;;;;;;:36;2107:14;2086:36;;;;;;;;;;;:90;;;;2036:148::o;545:45::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;702:1834:0:-;858:8;849:17;;;;;;;;:5;:17;;;;;;;;;846:107;;;921:19;933:6;921:7;:11;;:19;;;;:::i;:::-;890:8;:20;899:10;890:20;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;:50;;882:59;;;;;;846:107;975:9;966:18;;;;;;;;:5;:18;;;;;;;;;963:98;;;1041:7;1008:8;:20;1017:10;1008:20;;;;;;;;;;;;;;;:29;1029:7;1008:29;;;;;;;;;;;;:40;;1000:49;;;;;;963:98;1081:22;1106:9;:18;1116:7;1106:18;;;;;;;;;;;:31;1130:5;1125:11;;;;;;;;1106:31;;;;;;;;;;;1081:56;;1148:6;1174:63;;;;;;;;1180:11;;1174:63;;;;1193:10;1174:63;;;;;;1205:5;1174:63;;;;;;;;;;;;1212:7;1174:63;;;;1221:7;1174:63;;;;1230:6;1174:63;;;1148:100;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1305:8;1296:17;;;;;;;;:5;:17;;;;;;;;;1293:1212;;;1334:13;1350:6;:13;;;;1334:29;;1329:551;1373:1;1365:5;:9;1329:551;;;1430:6;1445:1;1437:5;:9;1430:17;;;;;;;;;;;;;;;;;;:23;;;1408:6;1415:5;1408:13;;;;;;;;;;;;;;;;;;:19;;;:45;:95;;;;1480:6;1495:1;1487:5;:9;1480:17;;;;;;;;;;;;;;;;;;:23;;;1457:6;1464:5;1457:13;;;;;;;;;;;;;;;;;;:19;;;:46;1408:95;1404:461;;;1527:5;;1404:461;1583:6;1598:1;1590:5;:9;1583:17;;;;;;;;;;;;;;;;;;:23;;;1561:6;1568:5;1561:13;;;;;;;;;;;;;;;;;;:19;;;:45;1558:307;;;1695:24;1722:6;1729:5;1722:13;;;;;;;;;;;;;;;;;;1695:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1774:6;1789:1;1781:5;:9;1774:17;;;;;;;;;;;;;;;;;;1758:6;1765:5;1758:13;;;;;;;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1834:11;1814:6;1829:1;1821:5;:9;1814:17;;;;;;;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1558:307;;1376:7;;;;;;;;1329:551;;;;1293:1212;;;1918:9;1909:18;;;;;;;;:5;:18;;;;;;;;;1906:599;;;1948:13;1964:6;:13;;;;1948:29;;1943:551;1987:1;1979:5;:9;1943:551;;;2044:6;2059:1;2051:5;:9;2044:17;;;;;;;;;;;;;;;;;;:23;;;2022:6;2029:5;2022:13;;;;;;;;;;;;;;;;;;:19;;;:45;:95;;;;2094:6;2109:1;2101:5;:9;2094:17;;;;;;;;;;;;;;;;;;:23;;;2071:6;2078:5;2071:13;;;;;;;;;;;;;;;;;;:19;;;:46;2022:95;2018:461;;;2141:5;;2018:461;2197:6;2212:1;2204:5;:9;2197:17;;;;;;;;;;;;;;;;;;:23;;;2175:6;2182:5;2175:13;;;;;;;;;;;;;;;;;;:19;;;:45;2172:307;;;2309:24;2336:6;2343:5;2336:13;;;;;;;;;;;;;;;;;;2309:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2388:6;2403:1;2395:5;:9;2388:17;;;;;;;;;;;;;;;;;;2372:6;2379:5;2372:13;;;;;;;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2448:11;2428:6;2443:1;2435:5;:9;2428:17;;;;;;;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2172:307;;1990:7;;;;;;;;1943:551;;;;1906:599;1293:1212;2515:11;;:13;;;;;;;;;;;;;702:1834;;;;;:::o;1717:145:4:-;1308:12;:10;:12::i;:::-;1297:23;;:7;:5;:7::i;:::-;:23;;;1289:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1823:1:::1;1786:40;;1807:6;::::0;::::1;;;;;;;;1786:40;;;;;;;;;;;;1853:1;1836:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;1717:145::o:0;917:184:2:-;1308:12:4;:10;:12::i;:::-;1297:23;;:7;:5;:7::i;:::-;:23;;;1289:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1033:27:2::1;;;;;;;;1039:6;1033:27;;;;1047:12;1033:27;;;;::::0;1010:12:::1;:20;1023:6;1010:20;;;;;;;;;;;:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1071:9;1086:6;1071:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;917:184:::0;;:::o;1085:85:4:-;1131:7;1157:6;;;;;;;;;;;1150:13;;1085:85;:::o;597:26:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1685:343::-;1753:6;1214:1;1169:47;;:12;:20;1182:6;1169:20;;;;;;;;;;;:33;;;;;;;;;;;;:47;;;;1161:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1811:6:::1;1780:8;:20;1789:10;1780:20;;;;;;;;;;;;;;;:28;1801:6;1780:28;;;;;;;;;;;;:37;;1772:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1899:40;1932:6;1899:8;:20;1908:10;1899:20;;;;;;;;;;;;;;;:28;1920:6;1899:28;;;;;;;;;;;;:32;;:40;;;;:::i;:::-;1868:8;:20;1877:10;1868:20;;;;;;;;;;;;;;;:28;1889:6;1868:28;;;;;;;;;;;:71;;;;1957:12;:20;1970:6;1957:20;;;;;;;;;;;:33;;;;;;;;;;;;1950:50;;;2001:10;2013:6;1950:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;1685:343:::0;;;:::o;551:143:0:-;622:14;655:9;:18;665:7;655:18;;;;;;;;;;;:31;679:5;674:11;;;;;;;;655:31;;;;;;;;;;;648:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;551:143;;;;:::o;2196:297:2:-;2298:6;2258:8;:20;2267:10;2258:20;;;;;;;;;;;;;;;:36;2279:14;2258:36;;;;;;;;;;;;:46;;2250:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2392:48;2433:6;2392:8;:20;2401:10;2392:20;;;;;;;;;;;;;;;:36;2413:14;2392:36;;;;;;;;;;;;:40;;:48;;;;:::i;:::-;2353:8;:20;2362:10;2353:20;;;;;;;;;;;;;;;:36;2374:14;2353:36;;;;;;;;;;;:87;;;;2451:10;:15;;2474:6;2451:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2196:297;:::o;1284:393::-;1351:6;1214:1;1169:47;;:12;:20;1182:6;1169:20;;;;;;;;;;;:33;;;;;;;;;;;;:47;;;;1161:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1444:6:::1;1385:12;:20;1398:6;1385:20;;;;;;;;;;;:33;;;;;;;;;;;;1378:51;;;1430:10;1378:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;:72;;1370:117;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;1529:40;1562:6;1529:8;:20;1538:10;1529:20;;;;;;;;;;;;;;;:28;1550:6;1529:28;;;;;;;;;;;;:32;;:40;;;;:::i;:::-;1498:8;:20;1507:10;1498:20;;;;;;;;;;;;;;;:28;1519:6;1498:28;;;;;;;;;;;:71;;;;1587:12;:20;1600:6;1587:20;;;;;;;;;;;:33;;;;;;;;;;;;1580:54;;;1635:10;1655:4;1662:6;1580:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;1284:393:::0;;;:::o;2011:240:4:-;1308:12;:10;:12::i;:::-;1297:23;;:7;:5;:7::i;:::-;:23;;;1289:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2119:1:::1;2099:22;;:8;:22;;;;2091:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2208:8;2179:38;;2200:6;::::0;::::1;;;;;;;;2179:38;;;;;;;;;;;;2236:8;2227:6;::::0;:17:::1;;;;;;;;;;;;;;;;;;2011:240:::0;:::o;2690:175:5:-;2748:7;2767:9;2783:1;2779;:5;2767:17;;2807:1;2802;:6;;2794:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2857:1;2850:8;;;2690:175;;;;:::o;3538:215::-;3596:7;3624:1;3619;:6;3615:20;;;3634:1;3627:8;;;;3615:20;3645:9;3661:1;3657;:5;3645:17;;3689:1;3684;3680;:5;;;;;;:10;3672:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3745:1;3738:8;;;3538:215;;;;;:::o;598:104:8:-;651:15;685:10;678:17;;598:104;:::o;3136:155:5:-;3194:7;3226:1;3221;:6;;3213:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3283:1;3279;:5;3272:12;;3136:155;;;;:::o;7:139:9:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:139::-;;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;204:87;;;;:::o;297:153::-;;388:6;375:20;366:29;;404:40;438:5;404:40;:::i;:::-;356:94;;;;:::o;456:139::-;;540:6;527:20;518:29;;556:33;583:5;556:33;:::i;:::-;508:87;;;;:::o;601:262::-;;709:2;697:9;688:7;684:23;680:32;677:2;;;725:1;722;715:12;677:2;768:1;793:53;838:7;829:6;818:9;814:22;793:53;:::i;:::-;783:63;;739:117;667:196;;;;:::o;869:407::-;;;994:2;982:9;973:7;969:23;965:32;962:2;;;1010:1;1007;1000:12;962:2;1053:1;1078:53;1123:7;1114:6;1103:9;1099:22;1078:53;:::i;:::-;1068:63;;1024:117;1180:2;1206:53;1251:7;1242:6;1231:9;1227:22;1206:53;:::i;:::-;1196:63;;1151:118;952:324;;;;;:::o;1282:262::-;;1390:2;1378:9;1369:7;1365:23;1361:32;1358:2;;;1406:1;1403;1396:12;1358:2;1449:1;1474:53;1519:7;1510:6;1499:9;1495:22;1474:53;:::i;:::-;1464:63;;1420:117;1348:196;;;;:::o;1550:407::-;;;1675:2;1663:9;1654:7;1650:23;1646:32;1643:2;;;1691:1;1688;1681:12;1643:2;1734:1;1759:53;1804:7;1795:6;1784:9;1780:22;1759:53;:::i;:::-;1749:63;;1705:117;1861:2;1887:53;1932:7;1923:6;1912:9;1908:22;1887:53;:::i;:::-;1877:63;;1832:118;1633:324;;;;;:::o;1963:421::-;;;2095:2;2083:9;2074:7;2070:23;2066:32;2063:2;;;2111:1;2108;2101:12;2063:2;2154:1;2179:53;2224:7;2215:6;2204:9;2200:22;2179:53;:::i;:::-;2169:63;;2125:117;2281:2;2307:60;2359:7;2350:6;2339:9;2335:22;2307:60;:::i;:::-;2297:70;;2252:125;2053:331;;;;;:::o;2390:552::-;;;;2532:2;2520:9;2511:7;2507:23;2503:32;2500:2;;;2548:1;2545;2538:12;2500:2;2591:1;2616:53;2661:7;2652:6;2641:9;2637:22;2616:53;:::i;:::-;2606:63;;2562:117;2718:2;2744:53;2789:7;2780:6;2769:9;2765:22;2744:53;:::i;:::-;2734:63;;2689:118;2846:2;2872:53;2917:7;2908:6;2897:9;2893:22;2872:53;:::i;:::-;2862:63;;2817:118;2490:452;;;;;:::o;2948:712::-;;;;;3114:3;3102:9;3093:7;3089:23;3085:33;3082:2;;;3131:1;3128;3121:12;3082:2;3174:1;3199:60;3251:7;3242:6;3231:9;3227:22;3199:60;:::i;:::-;3189:70;;3145:124;3308:2;3334:53;3379:7;3370:6;3359:9;3355:22;3334:53;:::i;:::-;3324:63;;3279:118;3436:2;3462:53;3507:7;3498:6;3487:9;3483:22;3462:53;:::i;:::-;3452:63;;3407:118;3564:2;3590:53;3635:7;3626:6;3615:9;3611:22;3590:53;:::i;:::-;3580:63;;3535:118;3072:588;;;;;;;:::o;3666:262::-;;3774:2;3762:9;3753:7;3749:23;3745:32;3742:2;;;3790:1;3787;3780:12;3742:2;3833:1;3858:53;3903:7;3894:6;3883:9;3879:22;3858:53;:::i;:::-;3848:63;;3804:117;3732:196;;;;:::o;3934:407::-;;;4059:2;4047:9;4038:7;4034:23;4030:32;4027:2;;;4075:1;4072;4065:12;4027:2;4118:1;4143:53;4188:7;4179:6;4168:9;4164:22;4143:53;:::i;:::-;4133:63;;4089:117;4245:2;4271:53;4316:7;4307:6;4296:9;4292:22;4271:53;:::i;:::-;4261:63;;4216:118;4017:324;;;;;:::o;4347:263::-;;4479:88;4563:3;4555:6;4479:88;:::i;:::-;4599:4;4594:3;4590:14;4576:28;;4469:141;;;;:::o;4616:108::-;4693:24;4711:5;4693:24;:::i;:::-;4688:3;4681:37;4671:53;;:::o;4730:118::-;4817:24;4835:5;4817:24;:::i;:::-;4812:3;4805:37;4795:53;;:::o;4902:900::-;;5092:75;5161:5;5092:75;:::i;:::-;5183:107;5283:6;5278:3;5183:107;:::i;:::-;5176:114;;5314:77;5385:5;5314:77;:::i;:::-;5414:7;5445:1;5430:347;5455:6;5452:1;5449:13;5430:347;;;5531:6;5525:13;5558:105;5659:3;5644:13;5558:105;:::i;:::-;5551:112;;5686:81;5760:6;5686:81;:::i;:::-;5676:91;;5490:287;5477:1;5474;5470:9;5465:14;;5430:347;;;5434:14;5793:3;5786:10;;5068:734;;;;;;;:::o;5808:108::-;5885:24;5903:5;5885:24;:::i;:::-;5880:3;5873:37;5863:53;;:::o;5922:118::-;6009:24;6027:5;6009:24;:::i;:::-;6004:3;5997:37;5987:53;;:::o;6046:131::-;6128:42;6164:5;6128:42;:::i;:::-;6123:3;6116:55;6106:71;;:::o;6183:141::-;6275:42;6311:5;6275:42;:::i;:::-;6270:3;6263:55;6253:71;;:::o;6374:1195::-;6503:4;6498:3;6494:14;6588:4;6581:5;6577:16;6571:23;6607:63;6664:4;6659:3;6655:14;6641:12;6607:63;:::i;:::-;6518:162;6764:4;6757:5;6753:16;6747:23;6783:63;6840:4;6835:3;6831:14;6817:12;6783:63;:::i;:::-;6690:166;6938:4;6931:5;6927:16;6921:23;6957:68;7019:4;7014:3;7010:14;6996:12;6957:68;:::i;:::-;6866:169;7119:4;7112:5;7108:16;7102:23;7138:63;7195:4;7190:3;7186:14;7172:12;7138:63;:::i;:::-;7045:166;7295:4;7288:5;7284:16;7278:23;7314:63;7371:4;7366:3;7362:14;7348:12;7314:63;:::i;:::-;7221:166;7470:4;7463:5;7459:16;7453:23;7489:63;7546:4;7541:3;7537:14;7523:12;7489:63;:::i;:::-;7397:165;6472:1097;;;:::o;7575:108::-;7652:24;7670:5;7652:24;:::i;:::-;7647:3;7640:37;7630:53;;:::o;7689:118::-;7776:24;7794:5;7776:24;:::i;:::-;7771:3;7764:37;7754:53;;:::o;7813:222::-;;7944:2;7933:9;7929:18;7921:26;;7957:71;8025:1;8014:9;8010:17;8001:6;7957:71;:::i;:::-;7911:124;;;;:::o;8041:457::-;;8264:2;8253:9;8249:18;8241:26;;8313:9;8307:4;8303:20;8299:1;8288:9;8284:17;8277:47;8341:150;8486:4;8477:6;8341:150;:::i;:::-;8333:158;;8231:267;;;;:::o;8504:222::-;;8635:2;8624:9;8620:18;8612:26;;8648:71;8716:1;8705:9;8701:17;8692:6;8648:71;:::i;:::-;8602:124;;;;:::o;8732:332::-;;8891:2;8880:9;8876:18;8868:26;;8904:71;8972:1;8961:9;8957:17;8948:6;8904:71;:::i;:::-;8985:72;9053:2;9042:9;9038:18;9029:6;8985:72;:::i;:::-;8858:206;;;;;:::o;9070:222::-;;9201:2;9190:9;9186:18;9178:26;;9214:71;9282:1;9271:9;9267:17;9258:6;9214:71;:::i;:::-;9168:124;;;;:::o;9298:785::-;;9574:3;9563:9;9559:19;9551:27;;9588:71;9656:1;9645:9;9641:17;9632:6;9588:71;:::i;:::-;9669:72;9737:2;9726:9;9722:18;9713:6;9669:72;:::i;:::-;9751:77;9824:2;9813:9;9809:18;9800:6;9751:77;:::i;:::-;9838:72;9906:2;9895:9;9891:18;9882:6;9838:72;:::i;:::-;9920:73;9988:3;9977:9;9973:19;9964:6;9920:73;:::i;:::-;10003;10071:3;10060:9;10056:19;10047:6;10003:73;:::i;:::-;9541:542;;;;;;;;;:::o;10089:153::-;;10200:3;10192:11;;10230:4;10225:3;10221:14;10213:22;;10182:60;;;:::o;10248:135::-;;10370:5;10364:12;10354:22;;10343:40;;;:::o;10389:134::-;;10512:4;10507:3;10503:14;10495:22;;10485:38;;;:::o;10529:205::-;;10683:6;10678:3;10671:19;10723:4;10718:3;10714:14;10699:29;;10661:73;;;;:::o;10740:96::-;;10806:24;10824:5;10806:24;:::i;:::-;10795:35;;10785:51;;;:::o;10842:77::-;;10908:5;10897:16;;10887:32;;;:::o;10925:125::-;;10998:5;10987:16;;11004:40;11038:5;11004:40;:::i;:::-;10977:73;;;:::o;11056:126::-;;11133:42;11126:5;11122:54;11111:65;;11101:81;;;:::o;11188:77::-;;11254:5;11243:16;;11233:32;;;:::o;11271:125::-;;11359:31;11384:5;11359:31;:::i;:::-;11346:44;;11336:60;;;:::o;11402:48::-;11435:9;11456:107;11536:1;11529:5;11526:12;11516:2;;11542:13;;:::i;:::-;11516:2;11506:57;:::o;11569:122::-;11642:24;11660:5;11642:24;:::i;:::-;11635:5;11632:35;11622:2;;11681:1;11678;11671:12;11622:2;11612:79;:::o;11697:122::-;11770:24;11788:5;11770:24;:::i;:::-;11763:5;11760:35;11750:2;;11809:1;11806;11799:12;11750:2;11740:79;:::o;11825:106::-;11905:1;11898:5;11895:12;11885:2;;11921:1;11918;11911:12;11885:2;11875:56;:::o;11937:122::-;12010:24;12028:5;12010:24;:::i;:::-;12003:5;12000:35;11990:2;;12049:1;12046;12039:12;11990:2;11980:79;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity >= 0.6.0 < 0.8.0;\r\npragma experimental ABIEncoderV2;\r\nimport \"./Wallet.sol\";\r\n\r\ncontract Dex is Wallet {\r\n    \r\n    using SafeMath for uint256;\r\n\r\n    enum Side {\r\n        BUY,\r\n        SELL\r\n    }\r\n\r\n    struct Order {\r\n        uint id;\r\n        address trader;\r\n        Side side;\r\n        bytes32 ticker;\r\n        uint amount;\r\n        uint price;\r\n    }\r\n\r\n    uint public nextOrderId;\r\n\r\n    //Ticker => Side => Orderbook\r\n    mapping(bytes32 => mapping(uint => Order[])) public orderBook;\r\n\r\n    function getOrderBook(bytes32 _ticker, Side _side) view public returns(Order[] memory){\r\n        return orderBook[_ticker][uint(_side)];\r\n    }\r\n\r\n    function createLimitOrder(Side _side, bytes32 _ticker, uint _amount, uint _price) public {\r\n    //Perform checks as required in tests \r\n        if(_side == Side.BUY){\r\n            require(balances[msg.sender]['ETH'] >= _amount.mul(_price));\r\n        }\r\n        if(_side == Side.SELL){\r\n            require(balances[msg.sender][_ticker] >= _amount);\r\n        }\r\n        \r\n        Order[] storage orders = orderBook[_ticker][uint(_side)];\r\n        orders.push(\r\n            Order(nextOrderId, msg.sender, _side, _ticker, _amount, _price)\r\n        );\r\n        //Bubble sort algorithm \r\n        if(_side == Side.BUY){\r\n            for (uint256 index = orders.length; index > 0; index--) {\r\n                if (orders[index].price > orders[index - 1].price || orders[index].price == orders[index - 1].price){\r\n                    break;\r\n                } else if(orders[index].price < orders[index - 1].price){\r\n                    //swap last element and penultimate element\r\n                    Order memory orderToMove = orders[index];\r\n                    orders[index] = orders[index - 1];\r\n                    orders[index - 1] = orderToMove;\r\n                }\r\n            }\r\n        }\r\n        else if(_side == Side.SELL){\r\n            for (uint256 index = orders.length; index > 0; index--) {\r\n                if (orders[index].price > orders[index - 1].price || orders[index].price == orders[index - 1].price){\r\n                    break;\r\n                } else if(orders[index].price < orders[index - 1].price){\r\n                    //swap last element and penultimate element\r\n                    Order memory orderToMove = orders[index];\r\n                    orders[index] = orders[index - 1];\r\n                    orders[index - 1] = orderToMove;\r\n                }\r\n            }\r\n        }\r\n        nextOrderId++;\r\n    }\r\n}",
  "sourcePath": "C:/Users/Matthew Watman/Desktop/Dev/IOTA/dex/contracts/Dex.sol",
  "ast": {
    "absolutePath": "/C/Users/Matthew Watman/Desktop/Dev/IOTA/dex/contracts/Dex.sol",
    "exportedSymbols": {
      "Context": [
        1686
      ],
      "Dex": [
        297
      ],
      "IERC20": [
        1663
      ],
      "Ownable": [
        727
      ],
      "SafeMath": [
        1082
      ],
      "Wallet": [
        597
      ]
    },
    "id": 298,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".0",
          "<",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:33:0"
      },
      {
        "id": 2,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "68:33:0"
      },
      {
        "absolutePath": "/C/Users/Matthew Watman/Desktop/Dev/IOTA/dex/contracts/Wallet.sol",
        "file": "./Wallet.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 298,
        "sourceUnit": 598,
        "src": "103:22:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4,
              "name": "Wallet",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 597,
              "src": "145:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Wallet_$597",
                "typeString": "contract Wallet"
              }
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "145:6:0"
          }
        ],
        "contractDependencies": [
          597,
          727,
          1686
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 297,
        "linearizedBaseContracts": [
          297,
          597,
          727,
          1686
        ],
        "name": "Dex",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 8,
            "libraryName": {
              "id": 6,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1082,
              "src": "171:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$1082",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "165:27:0",
            "typeName": {
              "id": 7,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "184:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "canonicalName": "Dex.Side",
            "id": 11,
            "members": [
              {
                "id": 9,
                "name": "BUY",
                "nodeType": "EnumValue",
                "src": "221:3:0"
              },
              {
                "id": 10,
                "name": "SELL",
                "nodeType": "EnumValue",
                "src": "235:4:0"
              }
            ],
            "name": "Side",
            "nodeType": "EnumDefinition",
            "src": "200:46:0"
          },
          {
            "canonicalName": "Dex.Order",
            "id": 24,
            "members": [
              {
                "constant": false,
                "id": 13,
                "mutability": "mutable",
                "name": "id",
                "nodeType": "VariableDeclaration",
                "scope": 24,
                "src": "278:7:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 12,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "278:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 15,
                "mutability": "mutable",
                "name": "trader",
                "nodeType": "VariableDeclaration",
                "scope": 24,
                "src": "296:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 14,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "296:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 17,
                "mutability": "mutable",
                "name": "side",
                "nodeType": "VariableDeclaration",
                "scope": 24,
                "src": "321:9:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_Side_$11",
                  "typeString": "enum Dex.Side"
                },
                "typeName": {
                  "id": 16,
                  "name": "Side",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 11,
                  "src": "321:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Side_$11",
                    "typeString": "enum Dex.Side"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 19,
                "mutability": "mutable",
                "name": "ticker",
                "nodeType": "VariableDeclaration",
                "scope": 24,
                "src": "341:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 18,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "341:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 21,
                "mutability": "mutable",
                "name": "amount",
                "nodeType": "VariableDeclaration",
                "scope": 24,
                "src": "366:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 20,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "366:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 23,
                "mutability": "mutable",
                "name": "price",
                "nodeType": "VariableDeclaration",
                "scope": 24,
                "src": "388:10:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 22,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "388:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Order",
            "nodeType": "StructDefinition",
            "scope": 297,
            "src": "254:152:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2a58b330",
            "id": 26,
            "mutability": "mutable",
            "name": "nextOrderId",
            "nodeType": "VariableDeclaration",
            "scope": 297,
            "src": "414:23:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 25,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "414:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "0bb431b6",
            "id": 33,
            "mutability": "mutable",
            "name": "orderBook",
            "nodeType": "VariableDeclaration",
            "scope": 297,
            "src": "481:61:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_array$_t_struct$_Order_$24_storage_$dyn_storage_$_$",
              "typeString": "mapping(bytes32 => mapping(uint256 => struct Dex.Order[]))"
            },
            "typeName": {
              "id": 32,
              "keyType": {
                "id": 27,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "489:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "481:44:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_array$_t_struct$_Order_$24_storage_$dyn_storage_$_$",
                "typeString": "mapping(bytes32 => mapping(uint256 => struct Dex.Order[]))"
              },
              "valueType": {
                "id": 31,
                "keyType": {
                  "id": 28,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "508:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "500:24:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_Order_$24_storage_$dyn_storage_$",
                  "typeString": "mapping(uint256 => struct Dex.Order[])"
                },
                "valueType": {
                  "baseType": {
                    "id": 29,
                    "name": "Order",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 24,
                    "src": "516:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Order_$24_storage_ptr",
                      "typeString": "struct Dex.Order"
                    }
                  },
                  "id": 30,
                  "nodeType": "ArrayTypeName",
                  "src": "516:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Order_$24_storage_$dyn_storage_ptr",
                    "typeString": "struct Dex.Order[]"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 52,
              "nodeType": "Block",
              "src": "637:57:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 43,
                        "name": "orderBook",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "655:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_array$_t_struct$_Order_$24_storage_$dyn_storage_$_$",
                          "typeString": "mapping(bytes32 => mapping(uint256 => struct Dex.Order storage ref[] storage ref))"
                        }
                      },
                      "id": 45,
                      "indexExpression": {
                        "id": 44,
                        "name": "_ticker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35,
                        "src": "665:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "655:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_Order_$24_storage_$dyn_storage_$",
                        "typeString": "mapping(uint256 => struct Dex.Order storage ref[] storage ref)"
                      }
                    },
                    "id": 50,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 48,
                          "name": "_side",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37,
                          "src": "679:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Side_$11",
                            "typeString": "enum Dex.Side"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_enum$_Side_$11",
                            "typeString": "enum Dex.Side"
                          }
                        ],
                        "id": 47,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "674:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 46,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "674:4:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 49,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "674:11:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "655:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Order_$24_storage_$dyn_storage",
                      "typeString": "struct Dex.Order storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 42,
                  "id": 51,
                  "nodeType": "Return",
                  "src": "648:38:0"
                }
              ]
            },
            "functionSelector": "ba58ea68",
            "id": 53,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOrderBook",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 38,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35,
                  "mutability": "mutable",
                  "name": "_ticker",
                  "nodeType": "VariableDeclaration",
                  "scope": 53,
                  "src": "573:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 34,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "573:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37,
                  "mutability": "mutable",
                  "name": "_side",
                  "nodeType": "VariableDeclaration",
                  "scope": 53,
                  "src": "590:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Side_$11",
                    "typeString": "enum Dex.Side"
                  },
                  "typeName": {
                    "id": 36,
                    "name": "Side",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 11,
                    "src": "590:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Side_$11",
                      "typeString": "enum Dex.Side"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "572:29:0"
            },
            "returnParameters": {
              "id": 42,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 53,
                  "src": "622:14:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Order_$24_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Dex.Order[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 39,
                      "name": "Order",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 24,
                      "src": "622:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Order_$24_storage_ptr",
                        "typeString": "struct Dex.Order"
                      }
                    },
                    "id": 40,
                    "nodeType": "ArrayTypeName",
                    "src": "622:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Order_$24_storage_$dyn_storage_ptr",
                      "typeString": "struct Dex.Order[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "621:16:0"
            },
            "scope": 297,
            "src": "551:143:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 295,
              "nodeType": "Block",
              "src": "791:1745:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_Side_$11",
                      "typeString": "enum Dex.Side"
                    },
                    "id": 67,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 64,
                      "name": "_side",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55,
                      "src": "849:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Side_$11",
                        "typeString": "enum Dex.Side"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 65,
                        "name": "Side",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "858:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Side_$11_$",
                          "typeString": "type(enum Dex.Side)"
                        }
                      },
                      "id": 66,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "BUY",
                      "nodeType": "MemberAccess",
                      "src": "858:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Side_$11",
                        "typeString": "enum Dex.Side"
                      }
                    },
                    "src": "849:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 83,
                  "nodeType": "IfStatement",
                  "src": "846:107:0",
                  "trueBody": {
                    "id": 82,
                    "nodeType": "Block",
                    "src": "867:86:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 79,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 69,
                                    "name": "balances",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 358,
                                    "src": "890:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_uint256_$_$",
                                      "typeString": "mapping(address => mapping(bytes32 => uint256))"
                                    }
                                  },
                                  "id": 72,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 70,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "899:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 71,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "899:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "890:20:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                                    "typeString": "mapping(bytes32 => uint256)"
                                  }
                                },
                                "id": 74,
                                "indexExpression": {
                                  "hexValue": "455448",
                                  "id": 73,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "911:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_aaaebeba3810b1e6b70781f14b2d72c1cb89c0b2b320c43bb67ff79f562f5ff4",
                                    "typeString": "literal_string \"ETH\""
                                  },
                                  "value": "ETH"
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "890:27:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "id": 77,
                                    "name": "_price",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 61,
                                    "src": "933:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 75,
                                    "name": "_amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 59,
                                    "src": "921:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 76,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "mul",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 965,
                                  "src": "921:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 78,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "921:19:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "890:50:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 68,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "882:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 80,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "882:59:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 81,
                        "nodeType": "ExpressionStatement",
                        "src": "882:59:0"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_Side_$11",
                      "typeString": "enum Dex.Side"
                    },
                    "id": 87,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 84,
                      "name": "_side",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55,
                      "src": "966:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Side_$11",
                        "typeString": "enum Dex.Side"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 85,
                        "name": "Side",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "975:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Side_$11_$",
                          "typeString": "type(enum Dex.Side)"
                        }
                      },
                      "id": 86,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "SELL",
                      "nodeType": "MemberAccess",
                      "src": "975:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Side_$11",
                        "typeString": "enum Dex.Side"
                      }
                    },
                    "src": "966:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 100,
                  "nodeType": "IfStatement",
                  "src": "963:98:0",
                  "trueBody": {
                    "id": 99,
                    "nodeType": "Block",
                    "src": "985:76:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 96,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 89,
                                    "name": "balances",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 358,
                                    "src": "1008:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_uint256_$_$",
                                      "typeString": "mapping(address => mapping(bytes32 => uint256))"
                                    }
                                  },
                                  "id": 92,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 90,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "1017:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 91,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "1017:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1008:20:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                                    "typeString": "mapping(bytes32 => uint256)"
                                  }
                                },
                                "id": 94,
                                "indexExpression": {
                                  "id": 93,
                                  "name": "_ticker",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 57,
                                  "src": "1029:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1008:29:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 95,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59,
                                "src": "1041:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1008:40:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 88,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "1000:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 97,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1000:49:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 98,
                        "nodeType": "ExpressionStatement",
                        "src": "1000:49:0"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    104
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 104,
                      "mutability": "mutable",
                      "name": "orders",
                      "nodeType": "VariableDeclaration",
                      "scope": 295,
                      "src": "1081:22:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Order_$24_storage_$dyn_storage_ptr",
                        "typeString": "struct Dex.Order[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 102,
                          "name": "Order",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 24,
                          "src": "1081:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Order_$24_storage_ptr",
                            "typeString": "struct Dex.Order"
                          }
                        },
                        "id": 103,
                        "nodeType": "ArrayTypeName",
                        "src": "1081:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Order_$24_storage_$dyn_storage_ptr",
                          "typeString": "struct Dex.Order[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 113,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 105,
                        "name": "orderBook",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "1106:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_array$_t_struct$_Order_$24_storage_$dyn_storage_$_$",
                          "typeString": "mapping(bytes32 => mapping(uint256 => struct Dex.Order storage ref[] storage ref))"
                        }
                      },
                      "id": 107,
                      "indexExpression": {
                        "id": 106,
                        "name": "_ticker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57,
                        "src": "1116:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1106:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_Order_$24_storage_$dyn_storage_$",
                        "typeString": "mapping(uint256 => struct Dex.Order storage ref[] storage ref)"
                      }
                    },
                    "id": 112,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 110,
                          "name": "_side",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55,
                          "src": "1130:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Side_$11",
                            "typeString": "enum Dex.Side"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_enum$_Side_$11",
                            "typeString": "enum Dex.Side"
                          }
                        ],
                        "id": 109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1125:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 108,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1125:4:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 111,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1125:11:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1106:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Order_$24_storage_$dyn_storage",
                      "typeString": "struct Dex.Order storage ref[] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1081:56:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 118,
                            "name": "nextOrderId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26,
                            "src": "1180:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 119,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1193:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 120,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1193:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "id": 121,
                            "name": "_side",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55,
                            "src": "1205:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Side_$11",
                              "typeString": "enum Dex.Side"
                            }
                          },
                          {
                            "id": 122,
                            "name": "_ticker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 57,
                            "src": "1212:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 123,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59,
                            "src": "1221:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 124,
                            "name": "_price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61,
                            "src": "1230:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_enum$_Side_$11",
                              "typeString": "enum Dex.Side"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 117,
                          "name": "Order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24,
                          "src": "1174:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Order_$24_storage_ptr_$",
                            "typeString": "type(struct Dex.Order storage pointer)"
                          }
                        },
                        "id": 125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1174:63:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Order_$24_memory_ptr",
                          "typeString": "struct Dex.Order memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Order_$24_memory_ptr",
                          "typeString": "struct Dex.Order memory"
                        }
                      ],
                      "expression": {
                        "id": 114,
                        "name": "orders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 104,
                        "src": "1148:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Order_$24_storage_$dyn_storage_ptr",
                          "typeString": "struct Dex.Order storage ref[] storage pointer"
                        }
                      },
                      "id": 116,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1148:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Order_$24_storage_$returns$__$",
                        "typeString": "function (struct Dex.Order storage ref)"
                      }
                    },
                    "id": 126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1148:100:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 127,
                  "nodeType": "ExpressionStatement",
                  "src": "1148:100:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_Side_$11",
                      "typeString": "enum Dex.Side"
                    },
                    "id": 131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 128,
                      "name": "_side",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55,
                      "src": "1296:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Side_$11",
                        "typeString": "enum Dex.Side"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 129,
                        "name": "Side",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "1305:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Side_$11_$",
                          "typeString": "type(enum Dex.Side)"
                        }
                      },
                      "id": 130,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "BUY",
                      "nodeType": "MemberAccess",
                      "src": "1305:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Side_$11",
                        "typeString": "enum Dex.Side"
                      }
                    },
                    "src": "1296:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_Side_$11",
                        "typeString": "enum Dex.Side"
                      },
                      "id": 212,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 209,
                        "name": "_side",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55,
                        "src": "1909:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Side_$11",
                          "typeString": "enum Dex.Side"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 210,
                          "name": "Side",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11,
                          "src": "1918:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Side_$11_$",
                            "typeString": "type(enum Dex.Side)"
                          }
                        },
                        "id": 211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "SELL",
                        "nodeType": "MemberAccess",
                        "src": "1918:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Side_$11",
                          "typeString": "enum Dex.Side"
                        }
                      },
                      "src": "1909:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 290,
                    "nodeType": "IfStatement",
                    "src": "1906:599:0",
                    "trueBody": {
                      "id": 289,
                      "nodeType": "Block",
                      "src": "1928:577:0",
                      "statements": [
                        {
                          "body": {
                            "id": 287,
                            "nodeType": "Block",
                            "src": "1999:495:0",
                            "statements": [
                              {
                                "condition": {
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "id": 246,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 234,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 224,
                                          "name": "orders",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 104,
                                          "src": "2022:6:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_Order_$24_storage_$dyn_storage_ptr",
                                            "typeString": "struct Dex.Order storage ref[] storage pointer"
                                          }
                                        },
                                        "id": 226,
                                        "indexExpression": {
                                          "id": 225,
                                          "name": "index",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 214,
                                          "src": "2029:5:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "2022:13:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Order_$24_storage",
                                          "typeString": "struct Dex.Order storage ref"
                                        }
                                      },
                                      "id": 227,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "price",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 23,
                                      "src": "2022:19:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": ">",
                                    "rightExpression": {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 228,
                                          "name": "orders",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 104,
                                          "src": "2044:6:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_Order_$24_storage_$dyn_storage_ptr",
                                            "typeString": "struct Dex.Order storage ref[] storage pointer"
                                          }
                                        },
                                        "id": 232,
                                        "indexExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 231,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 229,
                                            "name": "index",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 214,
                                            "src": "2051:5:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "-",
                                          "rightExpression": {
                                            "hexValue": "31",
                                            "id": 230,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "2059:1:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_1_by_1",
                                              "typeString": "int_const 1"
                                            },
                                            "value": "1"
                                          },
                                          "src": "2051:9:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "2044:17:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Order_$24_storage",
                                          "typeString": "struct Dex.Order storage ref"
                                        }
                                      },
                                      "id": 233,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "price",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 23,
                                      "src": "2044:23:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "2022:45:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "||",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 245,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 235,
                                          "name": "orders",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 104,
                                          "src": "2071:6:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_Order_$24_storage_$dyn_storage_ptr",
                                            "typeString": "struct Dex.Order storage ref[] storage pointer"
                                          }
                                        },
                                        "id": 237,
                                        "indexExpression": {
                                          "id": 236,
                                          "name": "index",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 214,
                                          "src": "2078:5:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "2071:13:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Order_$24_storage",
                                          "typeString": "struct Dex.Order storage ref"
                                        }
                                      },
                                      "id": 238,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "price",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 23,
                                      "src": "2071:19:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 239,
                                          "name": "orders",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 104,
                                          "src": "2094:6:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_Order_$24_storage_$dyn_storage_ptr",
                                            "typeString": "struct Dex.Order storage ref[] storage pointer"
                                          }
                                        },
                                        "id": 243,
                                        "indexExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 242,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 240,
                                            "name": "index",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 214,
                                            "src": "2101:5:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "-",
                                          "rightExpression": {
                                            "hexValue": "31",
                                            "id": 241,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "2109:1:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_1_by_1",
                                              "typeString": "int_const 1"
                                            },
                                            "value": "1"
                                          },
                                          "src": "2101:9:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "2094:17:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Order_$24_storage",
                                          "typeString": "struct Dex.Order storage ref"
                                        }
                                      },
                                      "id": 244,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "price",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 23,
                                      "src": "2094:23:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "2071:46:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "src": "2022:95:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseBody": {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 259,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 249,
                                          "name": "orders",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 104,
                                          "src": "2175:6:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_Order_$24_storage_$dyn_storage_ptr",
                                            "typeString": "struct Dex.Order storage ref[] storage pointer"
                                          }
                                        },
                                        "id": 251,
                                        "indexExpression": {
                                          "id": 250,
                                          "name": "index",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 214,
                                          "src": "2182:5:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "2175:13:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Order_$24_storage",
                                          "typeString": "struct Dex.Order storage ref"
                                        }
                                      },
                                      "id": 252,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "price",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 23,
                                      "src": "2175:19:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "<",
                                    "rightExpression": {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 253,
                                          "name": "orders",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 104,
                                          "src": "2197:6:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_Order_$24_storage_$dyn_storage_ptr",
                                            "typeString": "struct Dex.Order storage ref[] storage pointer"
                                          }
                                        },
                                        "id": 257,
                                        "indexExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 256,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 254,
                                            "name": "index",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 214,
                                            "src": "2204:5:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "-",
                                          "rightExpression": {
                                            "hexValue": "31",
                                            "id": 255,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "2212:1:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_1_by_1",
                                              "typeString": "int_const 1"
                                            },
                                            "value": "1"
                                          },
                                          "src": "2204:9:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "2197:17:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Order_$24_storage",
                                          "typeString": "struct Dex.Order storage ref"
                                        }
                                      },
                                      "id": 258,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "price",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 23,
                                      "src": "2197:23:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "2175:45:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "id": 285,
                                  "nodeType": "IfStatement",
                                  "src": "2172:307:0",
                                  "trueBody": {
                                    "id": 284,
                                    "nodeType": "Block",
                                    "src": "2221:258:0",
                                    "statements": [
                                      {
                                        "assignments": [
                                          261
                                        ],
                                        "declarations": [
                                          {
                                            "constant": false,
                                            "id": 261,
                                            "mutability": "mutable",
                                            "name": "orderToMove",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 284,
                                            "src": "2309:24:0",
                                            "stateVariable": false,
                                            "storageLocation": "memory",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Order_$24_memory_ptr",
                                              "typeString": "struct Dex.Order"
                                            },
                                            "typeName": {
                                              "id": 260,
                                              "name": "Order",
                                              "nodeType": "UserDefinedTypeName",
                                              "referencedDeclaration": 24,
                                              "src": "2309:5:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Order_$24_storage_ptr",
                                                "typeString": "struct Dex.Order"
                                              }
                                            },
                                            "visibility": "internal"
                                          }
                                        ],
                                        "id": 265,
                                        "initialValue": {
                                          "baseExpression": {
                                            "id": 262,
                                            "name": "orders",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 104,
                                            "src": "2336:6:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$_Order_$24_storage_$dyn_storage_ptr",
                                              "typeString": "struct Dex.Order storage ref[] storage pointer"
                                            }
                                          },
                                          "id": 264,
                                          "indexExpression": {
                                            "id": 263,
                                            "name": "index",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 214,
                                            "src": "2343:5:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "2336:13:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Order_$24_storage",
                                            "typeString": "struct Dex.Order storage ref"
                                          }
                                        },
                                        "nodeType": "VariableDeclarationStatement",
                                        "src": "2309:40:0"
                                      },
                                      {
                                        "expression": {
                                          "id": 274,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftHandSide": {
                                            "baseExpression": {
                                              "id": 266,
                                              "name": "orders",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 104,
                                              "src": "2372:6:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_struct$_Order_$24_storage_$dyn_storage_ptr",
                                                "typeString": "struct Dex.Order storage ref[] storage pointer"
                                              }
                                            },
                                            "id": 268,
                                            "indexExpression": {
                                              "id": 267,
                                              "name": "index",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 214,
                                              "src": "2379:5:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": true,
                                            "nodeType": "IndexAccess",
                                            "src": "2372:13:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Order_$24_storage",
                                              "typeString": "struct Dex.Order storage ref"
                                            }
                                          },
                                          "nodeType": "Assignment",
                                          "operator": "=",
                                          "rightHandSide": {
                                            "baseExpression": {
                                              "id": 269,
                                              "name": "orders",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 104,
                                              "src": "2388:6:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_struct$_Order_$24_storage_$dyn_storage_ptr",
                                                "typeString": "struct Dex.Order storage ref[] storage pointer"
                                              }
                                            },
                                            "id": 273,
                                            "indexExpression": {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 272,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "id": 270,
                                                "name": "index",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 214,
                                                "src": "2395:5:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "-",
                                              "rightExpression": {
                                                "hexValue": "31",
                                                "id": 271,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "2403:1:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_1_by_1",
                                                  "typeString": "int_const 1"
                                                },
                                                "value": "1"
                                              },
                                              "src": "2395:9:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "2388:17:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Order_$24_storage",
                                              "typeString": "struct Dex.Order storage ref"
                                            }
                                          },
                                          "src": "2372:33:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Order_$24_storage",
                                            "typeString": "struct Dex.Order storage ref"
                                          }
                                        },
                                        "id": 275,
                                        "nodeType": "ExpressionStatement",
                                        "src": "2372:33:0"
                                      },
                                      {
                                        "expression": {
                                          "id": 282,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftHandSide": {
                                            "baseExpression": {
                                              "id": 276,
                                              "name": "orders",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 104,
                                              "src": "2428:6:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_struct$_Order_$24_storage_$dyn_storage_ptr",
                                                "typeString": "struct Dex.Order storage ref[] storage pointer"
                                              }
                                            },
                                            "id": 280,
                                            "indexExpression": {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 279,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "id": 277,
                                                "name": "index",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 214,
                                                "src": "2435:5:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "-",
                                              "rightExpression": {
                                                "hexValue": "31",
                                                "id": 278,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "2443:1:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_1_by_1",
                                                  "typeString": "int_const 1"
                                                },
                                                "value": "1"
                                              },
                                              "src": "2435:9:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": true,
                                            "nodeType": "IndexAccess",
                                            "src": "2428:17:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Order_$24_storage",
                                              "typeString": "struct Dex.Order storage ref"
                                            }
                                          },
                                          "nodeType": "Assignment",
                                          "operator": "=",
                                          "rightHandSide": {
                                            "id": 281,
                                            "name": "orderToMove",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 261,
                                            "src": "2448:11:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Order_$24_memory_ptr",
                                              "typeString": "struct Dex.Order memory"
                                            }
                                          },
                                          "src": "2428:31:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Order_$24_storage",
                                            "typeString": "struct Dex.Order storage ref"
                                          }
                                        },
                                        "id": 283,
                                        "nodeType": "ExpressionStatement",
                                        "src": "2428:31:0"
                                      }
                                    ]
                                  }
                                },
                                "id": 286,
                                "nodeType": "IfStatement",
                                "src": "2018:461:0",
                                "trueBody": {
                                  "id": 248,
                                  "nodeType": "Block",
                                  "src": "2118:48:0",
                                  "statements": [
                                    {
                                      "id": 247,
                                      "nodeType": "Break",
                                      "src": "2141:5:0"
                                    }
                                  ]
                                }
                              }
                            ]
                          },
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 220,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 218,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 214,
                              "src": "1979:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 219,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1987:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "1979:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 288,
                          "initializationExpression": {
                            "assignments": [
                              214
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 214,
                                "mutability": "mutable",
                                "name": "index",
                                "nodeType": "VariableDeclaration",
                                "scope": 288,
                                "src": "1948:13:0",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 213,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1948:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 217,
                            "initialValue": {
                              "expression": {
                                "id": 215,
                                "name": "orders",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 104,
                                "src": "1964:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Order_$24_storage_$dyn_storage_ptr",
                                  "typeString": "struct Dex.Order storage ref[] storage pointer"
                                }
                              },
                              "id": 216,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "1964:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "1948:29:0"
                          },
                          "loopExpression": {
                            "expression": {
                              "id": 222,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "--",
                              "prefix": false,
                              "src": "1990:7:0",
                              "subExpression": {
                                "id": 221,
                                "name": "index",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 214,
                                "src": "1990:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 223,
                            "nodeType": "ExpressionStatement",
                            "src": "1990:7:0"
                          },
                          "nodeType": "ForStatement",
                          "src": "1943:551:0"
                        }
                      ]
                    }
                  },
                  "id": 291,
                  "nodeType": "IfStatement",
                  "src": "1293:1212:0",
                  "trueBody": {
                    "id": 208,
                    "nodeType": "Block",
                    "src": "1314:577:0",
                    "statements": [
                      {
                        "body": {
                          "id": 206,
                          "nodeType": "Block",
                          "src": "1385:495:0",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 165,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 153,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 143,
                                        "name": "orders",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 104,
                                        "src": "1408:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_Order_$24_storage_$dyn_storage_ptr",
                                          "typeString": "struct Dex.Order storage ref[] storage pointer"
                                        }
                                      },
                                      "id": 145,
                                      "indexExpression": {
                                        "id": 144,
                                        "name": "index",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 133,
                                        "src": "1415:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "1408:13:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Order_$24_storage",
                                        "typeString": "struct Dex.Order storage ref"
                                      }
                                    },
                                    "id": 146,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "price",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 23,
                                    "src": "1408:19:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">",
                                  "rightExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 147,
                                        "name": "orders",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 104,
                                        "src": "1430:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_Order_$24_storage_$dyn_storage_ptr",
                                          "typeString": "struct Dex.Order storage ref[] storage pointer"
                                        }
                                      },
                                      "id": 151,
                                      "indexExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 150,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 148,
                                          "name": "index",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 133,
                                          "src": "1437:5:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "hexValue": "31",
                                          "id": 149,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "1445:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_1_by_1",
                                            "typeString": "int_const 1"
                                          },
                                          "value": "1"
                                        },
                                        "src": "1437:9:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "1430:17:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Order_$24_storage",
                                        "typeString": "struct Dex.Order storage ref"
                                      }
                                    },
                                    "id": 152,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "price",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 23,
                                    "src": "1430:23:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "1408:45:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "||",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 164,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 154,
                                        "name": "orders",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 104,
                                        "src": "1457:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_Order_$24_storage_$dyn_storage_ptr",
                                          "typeString": "struct Dex.Order storage ref[] storage pointer"
                                        }
                                      },
                                      "id": 156,
                                      "indexExpression": {
                                        "id": 155,
                                        "name": "index",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 133,
                                        "src": "1464:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "1457:13:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Order_$24_storage",
                                        "typeString": "struct Dex.Order storage ref"
                                      }
                                    },
                                    "id": 157,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "price",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 23,
                                    "src": "1457:19:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 158,
                                        "name": "orders",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 104,
                                        "src": "1480:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_Order_$24_storage_$dyn_storage_ptr",
                                          "typeString": "struct Dex.Order storage ref[] storage pointer"
                                        }
                                      },
                                      "id": 162,
                                      "indexExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 161,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 159,
                                          "name": "index",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 133,
                                          "src": "1487:5:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "hexValue": "31",
                                          "id": 160,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "1495:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_1_by_1",
                                            "typeString": "int_const 1"
                                          },
                                          "value": "1"
                                        },
                                        "src": "1487:9:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "1480:17:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Order_$24_storage",
                                        "typeString": "struct Dex.Order storage ref"
                                      }
                                    },
                                    "id": 163,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "price",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 23,
                                    "src": "1480:23:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "1457:46:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "1408:95:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "condition": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 178,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 168,
                                        "name": "orders",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 104,
                                        "src": "1561:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_Order_$24_storage_$dyn_storage_ptr",
                                          "typeString": "struct Dex.Order storage ref[] storage pointer"
                                        }
                                      },
                                      "id": 170,
                                      "indexExpression": {
                                        "id": 169,
                                        "name": "index",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 133,
                                        "src": "1568:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "1561:13:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Order_$24_storage",
                                        "typeString": "struct Dex.Order storage ref"
                                      }
                                    },
                                    "id": 171,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "price",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 23,
                                    "src": "1561:19:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "<",
                                  "rightExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 172,
                                        "name": "orders",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 104,
                                        "src": "1583:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_Order_$24_storage_$dyn_storage_ptr",
                                          "typeString": "struct Dex.Order storage ref[] storage pointer"
                                        }
                                      },
                                      "id": 176,
                                      "indexExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 175,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 173,
                                          "name": "index",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 133,
                                          "src": "1590:5:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "hexValue": "31",
                                          "id": 174,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "1598:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_1_by_1",
                                            "typeString": "int_const 1"
                                          },
                                          "value": "1"
                                        },
                                        "src": "1590:9:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "1583:17:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Order_$24_storage",
                                        "typeString": "struct Dex.Order storage ref"
                                      }
                                    },
                                    "id": 177,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "price",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 23,
                                    "src": "1583:23:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "1561:45:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "id": 204,
                                "nodeType": "IfStatement",
                                "src": "1558:307:0",
                                "trueBody": {
                                  "id": 203,
                                  "nodeType": "Block",
                                  "src": "1607:258:0",
                                  "statements": [
                                    {
                                      "assignments": [
                                        180
                                      ],
                                      "declarations": [
                                        {
                                          "constant": false,
                                          "id": 180,
                                          "mutability": "mutable",
                                          "name": "orderToMove",
                                          "nodeType": "VariableDeclaration",
                                          "scope": 203,
                                          "src": "1695:24:0",
                                          "stateVariable": false,
                                          "storageLocation": "memory",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Order_$24_memory_ptr",
                                            "typeString": "struct Dex.Order"
                                          },
                                          "typeName": {
                                            "id": 179,
                                            "name": "Order",
                                            "nodeType": "UserDefinedTypeName",
                                            "referencedDeclaration": 24,
                                            "src": "1695:5:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Order_$24_storage_ptr",
                                              "typeString": "struct Dex.Order"
                                            }
                                          },
                                          "visibility": "internal"
                                        }
                                      ],
                                      "id": 184,
                                      "initialValue": {
                                        "baseExpression": {
                                          "id": 181,
                                          "name": "orders",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 104,
                                          "src": "1722:6:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_Order_$24_storage_$dyn_storage_ptr",
                                            "typeString": "struct Dex.Order storage ref[] storage pointer"
                                          }
                                        },
                                        "id": 183,
                                        "indexExpression": {
                                          "id": 182,
                                          "name": "index",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 133,
                                          "src": "1729:5:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "1722:13:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Order_$24_storage",
                                          "typeString": "struct Dex.Order storage ref"
                                        }
                                      },
                                      "nodeType": "VariableDeclarationStatement",
                                      "src": "1695:40:0"
                                    },
                                    {
                                      "expression": {
                                        "id": 193,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                          "baseExpression": {
                                            "id": 185,
                                            "name": "orders",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 104,
                                            "src": "1758:6:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$_Order_$24_storage_$dyn_storage_ptr",
                                              "typeString": "struct Dex.Order storage ref[] storage pointer"
                                            }
                                          },
                                          "id": 187,
                                          "indexExpression": {
                                            "id": 186,
                                            "name": "index",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 133,
                                            "src": "1765:5:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": true,
                                          "nodeType": "IndexAccess",
                                          "src": "1758:13:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Order_$24_storage",
                                            "typeString": "struct Dex.Order storage ref"
                                          }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                          "baseExpression": {
                                            "id": 188,
                                            "name": "orders",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 104,
                                            "src": "1774:6:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$_Order_$24_storage_$dyn_storage_ptr",
                                              "typeString": "struct Dex.Order storage ref[] storage pointer"
                                            }
                                          },
                                          "id": 192,
                                          "indexExpression": {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 191,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 189,
                                              "name": "index",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 133,
                                              "src": "1781:5:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "-",
                                            "rightExpression": {
                                              "hexValue": "31",
                                              "id": 190,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "1789:1:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_1_by_1",
                                                "typeString": "int_const 1"
                                              },
                                              "value": "1"
                                            },
                                            "src": "1781:9:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "1774:17:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Order_$24_storage",
                                            "typeString": "struct Dex.Order storage ref"
                                          }
                                        },
                                        "src": "1758:33:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Order_$24_storage",
                                          "typeString": "struct Dex.Order storage ref"
                                        }
                                      },
                                      "id": 194,
                                      "nodeType": "ExpressionStatement",
                                      "src": "1758:33:0"
                                    },
                                    {
                                      "expression": {
                                        "id": 201,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                          "baseExpression": {
                                            "id": 195,
                                            "name": "orders",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 104,
                                            "src": "1814:6:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$_Order_$24_storage_$dyn_storage_ptr",
                                              "typeString": "struct Dex.Order storage ref[] storage pointer"
                                            }
                                          },
                                          "id": 199,
                                          "indexExpression": {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 198,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 196,
                                              "name": "index",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 133,
                                              "src": "1821:5:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "-",
                                            "rightExpression": {
                                              "hexValue": "31",
                                              "id": 197,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "1829:1:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_1_by_1",
                                                "typeString": "int_const 1"
                                              },
                                              "value": "1"
                                            },
                                            "src": "1821:9:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": true,
                                          "nodeType": "IndexAccess",
                                          "src": "1814:17:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Order_$24_storage",
                                            "typeString": "struct Dex.Order storage ref"
                                          }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                          "id": 200,
                                          "name": "orderToMove",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 180,
                                          "src": "1834:11:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Order_$24_memory_ptr",
                                            "typeString": "struct Dex.Order memory"
                                          }
                                        },
                                        "src": "1814:31:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Order_$24_storage",
                                          "typeString": "struct Dex.Order storage ref"
                                        }
                                      },
                                      "id": 202,
                                      "nodeType": "ExpressionStatement",
                                      "src": "1814:31:0"
                                    }
                                  ]
                                }
                              },
                              "id": 205,
                              "nodeType": "IfStatement",
                              "src": "1404:461:0",
                              "trueBody": {
                                "id": 167,
                                "nodeType": "Block",
                                "src": "1504:48:0",
                                "statements": [
                                  {
                                    "id": 166,
                                    "nodeType": "Break",
                                    "src": "1527:5:0"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 139,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 137,
                            "name": "index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 133,
                            "src": "1365:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 138,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1373:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1365:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 207,
                        "initializationExpression": {
                          "assignments": [
                            133
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 133,
                              "mutability": "mutable",
                              "name": "index",
                              "nodeType": "VariableDeclaration",
                              "scope": 207,
                              "src": "1334:13:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 132,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "1334:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 136,
                          "initialValue": {
                            "expression": {
                              "id": 134,
                              "name": "orders",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 104,
                              "src": "1350:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Order_$24_storage_$dyn_storage_ptr",
                                "typeString": "struct Dex.Order storage ref[] storage pointer"
                              }
                            },
                            "id": 135,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "1350:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "1334:29:0"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 141,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "--",
                            "prefix": false,
                            "src": "1376:7:0",
                            "subExpression": {
                              "id": 140,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 133,
                              "src": "1376:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 142,
                          "nodeType": "ExpressionStatement",
                          "src": "1376:7:0"
                        },
                        "nodeType": "ForStatement",
                        "src": "1329:551:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "2515:13:0",
                    "subExpression": {
                      "id": 292,
                      "name": "nextOrderId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26,
                      "src": "2515:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 294,
                  "nodeType": "ExpressionStatement",
                  "src": "2515:13:0"
                }
              ]
            },
            "functionSelector": "6f3b62f9",
            "id": 296,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createLimitOrder",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 62,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55,
                  "mutability": "mutable",
                  "name": "_side",
                  "nodeType": "VariableDeclaration",
                  "scope": 296,
                  "src": "728:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Side_$11",
                    "typeString": "enum Dex.Side"
                  },
                  "typeName": {
                    "id": 54,
                    "name": "Side",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 11,
                    "src": "728:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Side_$11",
                      "typeString": "enum Dex.Side"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57,
                  "mutability": "mutable",
                  "name": "_ticker",
                  "nodeType": "VariableDeclaration",
                  "scope": 296,
                  "src": "740:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 56,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "740:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 296,
                  "src": "757:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 58,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "757:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61,
                  "mutability": "mutable",
                  "name": "_price",
                  "nodeType": "VariableDeclaration",
                  "scope": 296,
                  "src": "771:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 60,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "771:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "727:56:0"
            },
            "returnParameters": {
              "id": 63,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "791:0:0"
            },
            "scope": 297,
            "src": "702:1834:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 298,
        "src": "129:2410:0"
      }
    ],
    "src": "33:2506:0"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/C/Users/Matthew Watman/Desktop/Dev/IOTA/dex/contracts/Dex.sol",
      "exportedSymbols": {
        "Context": [
          1686
        ],
        "Dex": [
          297
        ],
        "IERC20": [
          1663
        ],
        "Ownable": [
          727
        ],
        "SafeMath": [
          1082
        ],
        "Wallet": [
          597
        ]
      },
      "license": "MIT"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.6",
            ".0",
            "<",
            "0.8",
            ".0"
          ]
        },
        "id": 1,
        "name": "PragmaDirective",
        "src": "33:33:0"
      },
      {
        "attributes": {
          "literals": [
            "experimental",
            "ABIEncoderV2"
          ]
        },
        "id": 2,
        "name": "PragmaDirective",
        "src": "68:33:0"
      },
      {
        "attributes": {
          "SourceUnit": 598,
          "absolutePath": "/C/Users/Matthew Watman/Desktop/Dev/IOTA/dex/contracts/Wallet.sol",
          "file": "./Wallet.sol",
          "scope": 298,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 3,
        "name": "ImportDirective",
        "src": "103:22:0"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            597,
            727,
            1686
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            297,
            597,
            727,
            1686
          ],
          "name": "Dex",
          "scope": 298
        },
        "children": [
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "Wallet",
                  "referencedDeclaration": 597,
                  "type": "contract Wallet"
                },
                "id": 4,
                "name": "UserDefinedTypeName",
                "src": "145:6:0"
              }
            ],
            "id": 5,
            "name": "InheritanceSpecifier",
            "src": "145:6:0"
          },
          {
            "children": [
              {
                "attributes": {
                  "name": "SafeMath",
                  "referencedDeclaration": 1082,
                  "type": "library SafeMath"
                },
                "id": 6,
                "name": "UserDefinedTypeName",
                "src": "171:8:0"
              },
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 7,
                "name": "ElementaryTypeName",
                "src": "184:7:0"
              }
            ],
            "id": 8,
            "name": "UsingForDirective",
            "src": "165:27:0"
          },
          {
            "attributes": {
              "canonicalName": "Dex.Side",
              "name": "Side"
            },
            "children": [
              {
                "attributes": {
                  "name": "BUY"
                },
                "id": 9,
                "name": "EnumValue",
                "src": "221:3:0"
              },
              {
                "attributes": {
                  "name": "SELL"
                },
                "id": 10,
                "name": "EnumValue",
                "src": "235:4:0"
              }
            ],
            "id": 11,
            "name": "EnumDefinition",
            "src": "200:46:0"
          },
          {
            "attributes": {
              "canonicalName": "Dex.Order",
              "name": "Order",
              "scope": 297,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "id",
                  "scope": 24,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint",
                      "type": "uint256"
                    },
                    "id": 12,
                    "name": "ElementaryTypeName",
                    "src": "278:4:0"
                  }
                ],
                "id": 13,
                "name": "VariableDeclaration",
                "src": "278:7:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "trader",
                  "scope": 24,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "address",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "stateMutability": "nonpayable",
                      "type": "address"
                    },
                    "id": 14,
                    "name": "ElementaryTypeName",
                    "src": "296:7:0"
                  }
                ],
                "id": 15,
                "name": "VariableDeclaration",
                "src": "296:14:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "side",
                  "scope": 24,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "enum Dex.Side",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "Side",
                      "referencedDeclaration": 11,
                      "type": "enum Dex.Side"
                    },
                    "id": 16,
                    "name": "UserDefinedTypeName",
                    "src": "321:4:0"
                  }
                ],
                "id": 17,
                "name": "VariableDeclaration",
                "src": "321:9:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "ticker",
                  "scope": 24,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "bytes32",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "bytes32",
                      "type": "bytes32"
                    },
                    "id": 18,
                    "name": "ElementaryTypeName",
                    "src": "341:7:0"
                  }
                ],
                "id": 19,
                "name": "VariableDeclaration",
                "src": "341:14:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "scope": 24,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint",
                      "type": "uint256"
                    },
                    "id": 20,
                    "name": "ElementaryTypeName",
                    "src": "366:4:0"
                  }
                ],
                "id": 21,
                "name": "VariableDeclaration",
                "src": "366:11:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "price",
                  "scope": 24,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint",
                      "type": "uint256"
                    },
                    "id": 22,
                    "name": "ElementaryTypeName",
                    "src": "388:4:0"
                  }
                ],
                "id": 23,
                "name": "VariableDeclaration",
                "src": "388:10:0"
              }
            ],
            "id": 24,
            "name": "StructDefinition",
            "src": "254:152:0"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "2a58b330",
              "mutability": "mutable",
              "name": "nextOrderId",
              "scope": 297,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint",
                  "type": "uint256"
                },
                "id": 25,
                "name": "ElementaryTypeName",
                "src": "414:4:0"
              }
            ],
            "id": 26,
            "name": "VariableDeclaration",
            "src": "414:23:0"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "0bb431b6",
              "mutability": "mutable",
              "name": "orderBook",
              "scope": 297,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(bytes32 => mapping(uint256 => struct Dex.Order[]))",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(bytes32 => mapping(uint256 => struct Dex.Order[]))"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "bytes32",
                      "type": "bytes32"
                    },
                    "id": 27,
                    "name": "ElementaryTypeName",
                    "src": "489:7:0"
                  },
                  {
                    "attributes": {
                      "type": "mapping(uint256 => struct Dex.Order[])"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 28,
                        "name": "ElementaryTypeName",
                        "src": "508:4:0"
                      },
                      {
                        "attributes": {
                          "type": "struct Dex.Order[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "Order",
                              "referencedDeclaration": 24,
                              "type": "struct Dex.Order"
                            },
                            "id": 29,
                            "name": "UserDefinedTypeName",
                            "src": "516:5:0"
                          }
                        ],
                        "id": 30,
                        "name": "ArrayTypeName",
                        "src": "516:7:0"
                      }
                    ],
                    "id": 31,
                    "name": "Mapping",
                    "src": "500:24:0"
                  }
                ],
                "id": 32,
                "name": "Mapping",
                "src": "481:44:0"
              }
            ],
            "id": 33,
            "name": "VariableDeclaration",
            "src": "481:61:0"
          },
          {
            "attributes": {
              "functionSelector": "ba58ea68",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getOrderBook",
              "scope": 297,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_ticker",
                      "scope": 53,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
                        "id": 34,
                        "name": "ElementaryTypeName",
                        "src": "573:7:0"
                      }
                    ],
                    "id": 35,
                    "name": "VariableDeclaration",
                    "src": "573:15:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_side",
                      "scope": 53,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "enum Dex.Side",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "Side",
                          "referencedDeclaration": 11,
                          "type": "enum Dex.Side"
                        },
                        "id": 36,
                        "name": "UserDefinedTypeName",
                        "src": "590:4:0"
                      }
                    ],
                    "id": 37,
                    "name": "VariableDeclaration",
                    "src": "590:10:0"
                  }
                ],
                "id": 38,
                "name": "ParameterList",
                "src": "572:29:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 53,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "struct Dex.Order[]",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "struct Dex.Order[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "Order",
                              "referencedDeclaration": 24,
                              "type": "struct Dex.Order"
                            },
                            "id": 39,
                            "name": "UserDefinedTypeName",
                            "src": "622:5:0"
                          }
                        ],
                        "id": 40,
                        "name": "ArrayTypeName",
                        "src": "622:7:0"
                      }
                    ],
                    "id": 41,
                    "name": "VariableDeclaration",
                    "src": "622:14:0"
                  }
                ],
                "id": 42,
                "name": "ParameterList",
                "src": "621:16:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 42
                    },
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct Dex.Order storage ref[] storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "type": "mapping(uint256 => struct Dex.Order storage ref[] storage ref)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 33,
                                  "type": "mapping(bytes32 => mapping(uint256 => struct Dex.Order storage ref[] storage ref))",
                                  "value": "orderBook"
                                },
                                "id": 43,
                                "name": "Identifier",
                                "src": "655:9:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 35,
                                  "type": "bytes32",
                                  "value": "_ticker"
                                },
                                "id": 44,
                                "name": "Identifier",
                                "src": "665:7:0"
                              }
                            ],
                            "id": 45,
                            "name": "IndexAccess",
                            "src": "655:18:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "uint256",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_enum$_Side_$11",
                                      "typeString": "enum Dex.Side"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "uint"
                                    },
                                    "id": 46,
                                    "name": "ElementaryTypeName",
                                    "src": "674:4:0"
                                  }
                                ],
                                "id": 47,
                                "name": "ElementaryTypeNameExpression",
                                "src": "674:4:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 37,
                                  "type": "enum Dex.Side",
                                  "value": "_side"
                                },
                                "id": 48,
                                "name": "Identifier",
                                "src": "679:5:0"
                              }
                            ],
                            "id": 49,
                            "name": "FunctionCall",
                            "src": "674:11:0"
                          }
                        ],
                        "id": 50,
                        "name": "IndexAccess",
                        "src": "655:31:0"
                      }
                    ],
                    "id": 51,
                    "name": "Return",
                    "src": "648:38:0"
                  }
                ],
                "id": 52,
                "name": "Block",
                "src": "637:57:0"
              }
            ],
            "id": 53,
            "name": "FunctionDefinition",
            "src": "551:143:0"
          },
          {
            "attributes": {
              "functionSelector": "6f3b62f9",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "createLimitOrder",
              "scope": 297,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_side",
                      "scope": 296,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "enum Dex.Side",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "Side",
                          "referencedDeclaration": 11,
                          "type": "enum Dex.Side"
                        },
                        "id": 54,
                        "name": "UserDefinedTypeName",
                        "src": "728:4:0"
                      }
                    ],
                    "id": 55,
                    "name": "VariableDeclaration",
                    "src": "728:10:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_ticker",
                      "scope": 296,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
                        "id": 56,
                        "name": "ElementaryTypeName",
                        "src": "740:7:0"
                      }
                    ],
                    "id": 57,
                    "name": "VariableDeclaration",
                    "src": "740:15:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_amount",
                      "scope": 296,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 58,
                        "name": "ElementaryTypeName",
                        "src": "757:4:0"
                      }
                    ],
                    "id": 59,
                    "name": "VariableDeclaration",
                    "src": "757:12:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_price",
                      "scope": 296,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 60,
                        "name": "ElementaryTypeName",
                        "src": "771:4:0"
                      }
                    ],
                    "id": 61,
                    "name": "VariableDeclaration",
                    "src": "771:11:0"
                  }
                ],
                "id": 62,
                "name": "ParameterList",
                "src": "727:56:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 63,
                "name": "ParameterList",
                "src": "791:0:0"
              },
              {
                "children": [
                  {
                    "attributes": {},
                    "children": [
                      {
                        "attributes": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_Side_$11",
                            "typeString": "enum Dex.Side"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "==",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 55,
                              "type": "enum Dex.Side",
                              "value": "_side"
                            },
                            "id": 64,
                            "name": "Identifier",
                            "src": "849:5:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "member_name": "BUY",
                              "type": "enum Dex.Side"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 11,
                                  "type": "type(enum Dex.Side)",
                                  "value": "Side"
                                },
                                "id": 65,
                                "name": "Identifier",
                                "src": "858:4:0"
                              }
                            ],
                            "id": 66,
                            "name": "MemberAccess",
                            "src": "858:8:0"
                          }
                        ],
                        "id": 67,
                        "name": "BinaryOperation",
                        "src": "849:17:0"
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "tuple()",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        4294967278,
                                        4294967278
                                      ],
                                      "referencedDeclaration": 4294967278,
                                      "type": "function (bool) pure",
                                      "value": "require"
                                    },
                                    "id": 68,
                                    "name": "Identifier",
                                    "src": "882:7:0"
                                  },
                                  {
                                    "attributes": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "operator": ">=",
                                      "type": "bool"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "type": "uint256"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "type": "mapping(bytes32 => uint256)"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 358,
                                                  "type": "mapping(address => mapping(bytes32 => uint256))",
                                                  "value": "balances"
                                                },
                                                "id": 69,
                                                "name": "Identifier",
                                                "src": "890:8:0"
                                              },
                                              {
                                                "attributes": {
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "member_name": "sender",
                                                  "type": "address payable"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 4294967281,
                                                      "type": "msg",
                                                      "value": "msg"
                                                    },
                                                    "id": 70,
                                                    "name": "Identifier",
                                                    "src": "899:3:0"
                                                  }
                                                ],
                                                "id": 71,
                                                "name": "MemberAccess",
                                                "src": "899:10:0"
                                              }
                                            ],
                                            "id": 72,
                                            "name": "IndexAccess",
                                            "src": "890:20:0"
                                          },
                                          {
                                            "attributes": {
                                              "hexvalue": "455448",
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "token": "string",
                                              "type": "literal_string \"ETH\"",
                                              "value": "ETH"
                                            },
                                            "id": 73,
                                            "name": "Literal",
                                            "src": "911:5:0"
                                          }
                                        ],
                                        "id": 74,
                                        "name": "IndexAccess",
                                        "src": "890:27:0"
                                      },
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "isStructConstructorCall": false,
                                          "lValueRequested": false,
                                          "names": [
                                            null
                                          ],
                                          "tryCall": false,
                                          "type": "uint256",
                                          "type_conversion": false
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              ],
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "mul",
                                              "referencedDeclaration": 965,
                                              "type": "function (uint256,uint256) pure returns (uint256)"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 59,
                                                  "type": "uint256",
                                                  "value": "_amount"
                                                },
                                                "id": 75,
                                                "name": "Identifier",
                                                "src": "921:7:0"
                                              }
                                            ],
                                            "id": 76,
                                            "name": "MemberAccess",
                                            "src": "921:11:0"
                                          },
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 61,
                                              "type": "uint256",
                                              "value": "_price"
                                            },
                                            "id": 77,
                                            "name": "Identifier",
                                            "src": "933:6:0"
                                          }
                                        ],
                                        "id": 78,
                                        "name": "FunctionCall",
                                        "src": "921:19:0"
                                      }
                                    ],
                                    "id": 79,
                                    "name": "BinaryOperation",
                                    "src": "890:50:0"
                                  }
                                ],
                                "id": 80,
                                "name": "FunctionCall",
                                "src": "882:59:0"
                              }
                            ],
                            "id": 81,
                            "name": "ExpressionStatement",
                            "src": "882:59:0"
                          }
                        ],
                        "id": 82,
                        "name": "Block",
                        "src": "867:86:0"
                      }
                    ],
                    "id": 83,
                    "name": "IfStatement",
                    "src": "846:107:0"
                  },
                  {
                    "attributes": {},
                    "children": [
                      {
                        "attributes": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_Side_$11",
                            "typeString": "enum Dex.Side"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "==",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 55,
                              "type": "enum Dex.Side",
                              "value": "_side"
                            },
                            "id": 84,
                            "name": "Identifier",
                            "src": "966:5:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "member_name": "SELL",
                              "type": "enum Dex.Side"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 11,
                                  "type": "type(enum Dex.Side)",
                                  "value": "Side"
                                },
                                "id": 85,
                                "name": "Identifier",
                                "src": "975:4:0"
                              }
                            ],
                            "id": 86,
                            "name": "MemberAccess",
                            "src": "975:9:0"
                          }
                        ],
                        "id": 87,
                        "name": "BinaryOperation",
                        "src": "966:18:0"
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "tuple()",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        4294967278,
                                        4294967278
                                      ],
                                      "referencedDeclaration": 4294967278,
                                      "type": "function (bool) pure",
                                      "value": "require"
                                    },
                                    "id": 88,
                                    "name": "Identifier",
                                    "src": "1000:7:0"
                                  },
                                  {
                                    "attributes": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "operator": ">=",
                                      "type": "bool"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "type": "uint256"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "type": "mapping(bytes32 => uint256)"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 358,
                                                  "type": "mapping(address => mapping(bytes32 => uint256))",
                                                  "value": "balances"
                                                },
                                                "id": 89,
                                                "name": "Identifier",
                                                "src": "1008:8:0"
                                              },
                                              {
                                                "attributes": {
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "member_name": "sender",
                                                  "type": "address payable"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 4294967281,
                                                      "type": "msg",
                                                      "value": "msg"
                                                    },
                                                    "id": 90,
                                                    "name": "Identifier",
                                                    "src": "1017:3:0"
                                                  }
                                                ],
                                                "id": 91,
                                                "name": "MemberAccess",
                                                "src": "1017:10:0"
                                              }
                                            ],
                                            "id": 92,
                                            "name": "IndexAccess",
                                            "src": "1008:20:0"
                                          },
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 57,
                                              "type": "bytes32",
                                              "value": "_ticker"
                                            },
                                            "id": 93,
                                            "name": "Identifier",
                                            "src": "1029:7:0"
                                          }
                                        ],
                                        "id": 94,
                                        "name": "IndexAccess",
                                        "src": "1008:29:0"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 59,
                                          "type": "uint256",
                                          "value": "_amount"
                                        },
                                        "id": 95,
                                        "name": "Identifier",
                                        "src": "1041:7:0"
                                      }
                                    ],
                                    "id": 96,
                                    "name": "BinaryOperation",
                                    "src": "1008:40:0"
                                  }
                                ],
                                "id": 97,
                                "name": "FunctionCall",
                                "src": "1000:49:0"
                              }
                            ],
                            "id": 98,
                            "name": "ExpressionStatement",
                            "src": "1000:49:0"
                          }
                        ],
                        "id": 99,
                        "name": "Block",
                        "src": "985:76:0"
                      }
                    ],
                    "id": 100,
                    "name": "IfStatement",
                    "src": "963:98:0"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        104
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "orders",
                          "scope": 295,
                          "stateVariable": false,
                          "storageLocation": "storage",
                          "type": "struct Dex.Order[]",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "type": "struct Dex.Order[]"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "Order",
                                  "referencedDeclaration": 24,
                                  "type": "struct Dex.Order"
                                },
                                "id": 102,
                                "name": "UserDefinedTypeName",
                                "src": "1081:5:0"
                              }
                            ],
                            "id": 103,
                            "name": "ArrayTypeName",
                            "src": "1081:7:0"
                          }
                        ],
                        "id": 104,
                        "name": "VariableDeclaration",
                        "src": "1081:22:0"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct Dex.Order storage ref[] storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "type": "mapping(uint256 => struct Dex.Order storage ref[] storage ref)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 33,
                                  "type": "mapping(bytes32 => mapping(uint256 => struct Dex.Order storage ref[] storage ref))",
                                  "value": "orderBook"
                                },
                                "id": 105,
                                "name": "Identifier",
                                "src": "1106:9:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 57,
                                  "type": "bytes32",
                                  "value": "_ticker"
                                },
                                "id": 106,
                                "name": "Identifier",
                                "src": "1116:7:0"
                              }
                            ],
                            "id": 107,
                            "name": "IndexAccess",
                            "src": "1106:18:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "uint256",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_enum$_Side_$11",
                                      "typeString": "enum Dex.Side"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "uint"
                                    },
                                    "id": 108,
                                    "name": "ElementaryTypeName",
                                    "src": "1125:4:0"
                                  }
                                ],
                                "id": 109,
                                "name": "ElementaryTypeNameExpression",
                                "src": "1125:4:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 55,
                                  "type": "enum Dex.Side",
                                  "value": "_side"
                                },
                                "id": 110,
                                "name": "Identifier",
                                "src": "1130:5:0"
                              }
                            ],
                            "id": 111,
                            "name": "FunctionCall",
                            "src": "1125:11:0"
                          }
                        ],
                        "id": 112,
                        "name": "IndexAccess",
                        "src": "1106:31:0"
                      }
                    ],
                    "id": 113,
                    "name": "VariableDeclarationStatement",
                    "src": "1081:56:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_Order_$24_memory_ptr",
                                  "typeString": "struct Dex.Order memory"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "push",
                              "type": "function (struct Dex.Order storage ref)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 104,
                                  "type": "struct Dex.Order storage ref[] storage pointer",
                                  "value": "orders"
                                },
                                "id": 114,
                                "name": "Identifier",
                                "src": "1148:6:0"
                              }
                            ],
                            "id": 116,
                            "name": "MemberAccess",
                            "src": "1148:11:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": true,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "struct Dex.Order memory",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_enum$_Side_$11",
                                      "typeString": "enum Dex.Side"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 24,
                                  "type": "type(struct Dex.Order storage pointer)",
                                  "value": "Order"
                                },
                                "id": 117,
                                "name": "Identifier",
                                "src": "1174:5:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 26,
                                  "type": "uint256",
                                  "value": "nextOrderId"
                                },
                                "id": 118,
                                "name": "Identifier",
                                "src": "1180:11:0"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4294967281,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 119,
                                    "name": "Identifier",
                                    "src": "1193:3:0"
                                  }
                                ],
                                "id": 120,
                                "name": "MemberAccess",
                                "src": "1193:10:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 55,
                                  "type": "enum Dex.Side",
                                  "value": "_side"
                                },
                                "id": 121,
                                "name": "Identifier",
                                "src": "1205:5:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 57,
                                  "type": "bytes32",
                                  "value": "_ticker"
                                },
                                "id": 122,
                                "name": "Identifier",
                                "src": "1212:7:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 59,
                                  "type": "uint256",
                                  "value": "_amount"
                                },
                                "id": 123,
                                "name": "Identifier",
                                "src": "1221:7:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 61,
                                  "type": "uint256",
                                  "value": "_price"
                                },
                                "id": 124,
                                "name": "Identifier",
                                "src": "1230:6:0"
                              }
                            ],
                            "id": 125,
                            "name": "FunctionCall",
                            "src": "1174:63:0"
                          }
                        ],
                        "id": 126,
                        "name": "FunctionCall",
                        "src": "1148:100:0"
                      }
                    ],
                    "id": 127,
                    "name": "ExpressionStatement",
                    "src": "1148:100:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_Side_$11",
                            "typeString": "enum Dex.Side"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "==",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 55,
                              "type": "enum Dex.Side",
                              "value": "_side"
                            },
                            "id": 128,
                            "name": "Identifier",
                            "src": "1296:5:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "member_name": "BUY",
                              "type": "enum Dex.Side"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 11,
                                  "type": "type(enum Dex.Side)",
                                  "value": "Side"
                                },
                                "id": 129,
                                "name": "Identifier",
                                "src": "1305:4:0"
                              }
                            ],
                            "id": 130,
                            "name": "MemberAccess",
                            "src": "1305:8:0"
                          }
                        ],
                        "id": 131,
                        "name": "BinaryOperation",
                        "src": "1296:17:0"
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "assignments": [
                                    133
                                  ]
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "constant": false,
                                      "mutability": "mutable",
                                      "name": "index",
                                      "scope": 207,
                                      "stateVariable": false,
                                      "storageLocation": "default",
                                      "type": "uint256",
                                      "visibility": "internal"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "name": "uint256",
                                          "type": "uint256"
                                        },
                                        "id": 132,
                                        "name": "ElementaryTypeName",
                                        "src": "1334:7:0"
                                      }
                                    ],
                                    "id": 133,
                                    "name": "VariableDeclaration",
                                    "src": "1334:13:0"
                                  },
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "length",
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 104,
                                          "type": "struct Dex.Order storage ref[] storage pointer",
                                          "value": "orders"
                                        },
                                        "id": 134,
                                        "name": "Identifier",
                                        "src": "1350:6:0"
                                      }
                                    ],
                                    "id": 135,
                                    "name": "MemberAccess",
                                    "src": "1350:13:0"
                                  }
                                ],
                                "id": 136,
                                "name": "VariableDeclarationStatement",
                                "src": "1334:29:0"
                              },
                              {
                                "attributes": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": ">",
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 133,
                                      "type": "uint256",
                                      "value": "index"
                                    },
                                    "id": 137,
                                    "name": "Identifier",
                                    "src": "1365:5:0"
                                  },
                                  {
                                    "attributes": {
                                      "hexvalue": "30",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "token": "number",
                                      "type": "int_const 0",
                                      "value": "0"
                                    },
                                    "id": 138,
                                    "name": "Literal",
                                    "src": "1373:1:0"
                                  }
                                ],
                                "id": 139,
                                "name": "BinaryOperation",
                                "src": "1365:9:0"
                              },
                              {
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "operator": "--",
                                      "prefix": false,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 133,
                                          "type": "uint256",
                                          "value": "index"
                                        },
                                        "id": 140,
                                        "name": "Identifier",
                                        "src": "1376:5:0"
                                      }
                                    ],
                                    "id": 141,
                                    "name": "UnaryOperation",
                                    "src": "1376:7:0"
                                  }
                                ],
                                "id": 142,
                                "name": "ExpressionStatement",
                                "src": "1376:7:0"
                              },
                              {
                                "children": [
                                  {
                                    "children": [
                                      {
                                        "attributes": {
                                          "commonType": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          },
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "operator": "||",
                                          "type": "bool"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "operator": ">",
                                              "type": "bool"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "member_name": "price",
                                                  "referencedDeclaration": 23,
                                                  "type": "uint256"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "type": "struct Dex.Order storage ref"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 104,
                                                          "type": "struct Dex.Order storage ref[] storage pointer",
                                                          "value": "orders"
                                                        },
                                                        "id": 143,
                                                        "name": "Identifier",
                                                        "src": "1408:6:0"
                                                      },
                                                      {
                                                        "attributes": {
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 133,
                                                          "type": "uint256",
                                                          "value": "index"
                                                        },
                                                        "id": 144,
                                                        "name": "Identifier",
                                                        "src": "1415:5:0"
                                                      }
                                                    ],
                                                    "id": 145,
                                                    "name": "IndexAccess",
                                                    "src": "1408:13:0"
                                                  }
                                                ],
                                                "id": 146,
                                                "name": "MemberAccess",
                                                "src": "1408:19:0"
                                              },
                                              {
                                                "attributes": {
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "member_name": "price",
                                                  "referencedDeclaration": 23,
                                                  "type": "uint256"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "type": "struct Dex.Order storage ref"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 104,
                                                          "type": "struct Dex.Order storage ref[] storage pointer",
                                                          "value": "orders"
                                                        },
                                                        "id": 147,
                                                        "name": "Identifier",
                                                        "src": "1430:6:0"
                                                      },
                                                      {
                                                        "attributes": {
                                                          "commonType": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                          },
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "operator": "-",
                                                          "type": "uint256"
                                                        },
                                                        "children": [
                                                          {
                                                            "attributes": {
                                                              "overloadedDeclarations": [
                                                                null
                                                              ],
                                                              "referencedDeclaration": 133,
                                                              "type": "uint256",
                                                              "value": "index"
                                                            },
                                                            "id": 148,
                                                            "name": "Identifier",
                                                            "src": "1437:5:0"
                                                          },
                                                          {
                                                            "attributes": {
                                                              "hexvalue": "31",
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": true,
                                                              "lValueRequested": false,
                                                              "token": "number",
                                                              "type": "int_const 1",
                                                              "value": "1"
                                                            },
                                                            "id": 149,
                                                            "name": "Literal",
                                                            "src": "1445:1:0"
                                                          }
                                                        ],
                                                        "id": 150,
                                                        "name": "BinaryOperation",
                                                        "src": "1437:9:0"
                                                      }
                                                    ],
                                                    "id": 151,
                                                    "name": "IndexAccess",
                                                    "src": "1430:17:0"
                                                  }
                                                ],
                                                "id": 152,
                                                "name": "MemberAccess",
                                                "src": "1430:23:0"
                                              }
                                            ],
                                            "id": 153,
                                            "name": "BinaryOperation",
                                            "src": "1408:45:0"
                                          },
                                          {
                                            "attributes": {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "operator": "==",
                                              "type": "bool"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "member_name": "price",
                                                  "referencedDeclaration": 23,
                                                  "type": "uint256"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "type": "struct Dex.Order storage ref"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 104,
                                                          "type": "struct Dex.Order storage ref[] storage pointer",
                                                          "value": "orders"
                                                        },
                                                        "id": 154,
                                                        "name": "Identifier",
                                                        "src": "1457:6:0"
                                                      },
                                                      {
                                                        "attributes": {
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 133,
                                                          "type": "uint256",
                                                          "value": "index"
                                                        },
                                                        "id": 155,
                                                        "name": "Identifier",
                                                        "src": "1464:5:0"
                                                      }
                                                    ],
                                                    "id": 156,
                                                    "name": "IndexAccess",
                                                    "src": "1457:13:0"
                                                  }
                                                ],
                                                "id": 157,
                                                "name": "MemberAccess",
                                                "src": "1457:19:0"
                                              },
                                              {
                                                "attributes": {
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "member_name": "price",
                                                  "referencedDeclaration": 23,
                                                  "type": "uint256"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "type": "struct Dex.Order storage ref"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 104,
                                                          "type": "struct Dex.Order storage ref[] storage pointer",
                                                          "value": "orders"
                                                        },
                                                        "id": 158,
                                                        "name": "Identifier",
                                                        "src": "1480:6:0"
                                                      },
                                                      {
                                                        "attributes": {
                                                          "commonType": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                          },
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "operator": "-",
                                                          "type": "uint256"
                                                        },
                                                        "children": [
                                                          {
                                                            "attributes": {
                                                              "overloadedDeclarations": [
                                                                null
                                                              ],
                                                              "referencedDeclaration": 133,
                                                              "type": "uint256",
                                                              "value": "index"
                                                            },
                                                            "id": 159,
                                                            "name": "Identifier",
                                                            "src": "1487:5:0"
                                                          },
                                                          {
                                                            "attributes": {
                                                              "hexvalue": "31",
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": true,
                                                              "lValueRequested": false,
                                                              "token": "number",
                                                              "type": "int_const 1",
                                                              "value": "1"
                                                            },
                                                            "id": 160,
                                                            "name": "Literal",
                                                            "src": "1495:1:0"
                                                          }
                                                        ],
                                                        "id": 161,
                                                        "name": "BinaryOperation",
                                                        "src": "1487:9:0"
                                                      }
                                                    ],
                                                    "id": 162,
                                                    "name": "IndexAccess",
                                                    "src": "1480:17:0"
                                                  }
                                                ],
                                                "id": 163,
                                                "name": "MemberAccess",
                                                "src": "1480:23:0"
                                              }
                                            ],
                                            "id": 164,
                                            "name": "BinaryOperation",
                                            "src": "1457:46:0"
                                          }
                                        ],
                                        "id": 165,
                                        "name": "BinaryOperation",
                                        "src": "1408:95:0"
                                      },
                                      {
                                        "children": [
                                          {
                                            "id": 166,
                                            "name": "Break",
                                            "src": "1527:5:0"
                                          }
                                        ],
                                        "id": 167,
                                        "name": "Block",
                                        "src": "1504:48:0"
                                      },
                                      {
                                        "attributes": {},
                                        "children": [
                                          {
                                            "attributes": {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "operator": "<",
                                              "type": "bool"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "member_name": "price",
                                                  "referencedDeclaration": 23,
                                                  "type": "uint256"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "type": "struct Dex.Order storage ref"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 104,
                                                          "type": "struct Dex.Order storage ref[] storage pointer",
                                                          "value": "orders"
                                                        },
                                                        "id": 168,
                                                        "name": "Identifier",
                                                        "src": "1561:6:0"
                                                      },
                                                      {
                                                        "attributes": {
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 133,
                                                          "type": "uint256",
                                                          "value": "index"
                                                        },
                                                        "id": 169,
                                                        "name": "Identifier",
                                                        "src": "1568:5:0"
                                                      }
                                                    ],
                                                    "id": 170,
                                                    "name": "IndexAccess",
                                                    "src": "1561:13:0"
                                                  }
                                                ],
                                                "id": 171,
                                                "name": "MemberAccess",
                                                "src": "1561:19:0"
                                              },
                                              {
                                                "attributes": {
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "member_name": "price",
                                                  "referencedDeclaration": 23,
                                                  "type": "uint256"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "type": "struct Dex.Order storage ref"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 104,
                                                          "type": "struct Dex.Order storage ref[] storage pointer",
                                                          "value": "orders"
                                                        },
                                                        "id": 172,
                                                        "name": "Identifier",
                                                        "src": "1583:6:0"
                                                      },
                                                      {
                                                        "attributes": {
                                                          "commonType": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                          },
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "operator": "-",
                                                          "type": "uint256"
                                                        },
                                                        "children": [
                                                          {
                                                            "attributes": {
                                                              "overloadedDeclarations": [
                                                                null
                                                              ],
                                                              "referencedDeclaration": 133,
                                                              "type": "uint256",
                                                              "value": "index"
                                                            },
                                                            "id": 173,
                                                            "name": "Identifier",
                                                            "src": "1590:5:0"
                                                          },
                                                          {
                                                            "attributes": {
                                                              "hexvalue": "31",
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": true,
                                                              "lValueRequested": false,
                                                              "token": "number",
                                                              "type": "int_const 1",
                                                              "value": "1"
                                                            },
                                                            "id": 174,
                                                            "name": "Literal",
                                                            "src": "1598:1:0"
                                                          }
                                                        ],
                                                        "id": 175,
                                                        "name": "BinaryOperation",
                                                        "src": "1590:9:0"
                                                      }
                                                    ],
                                                    "id": 176,
                                                    "name": "IndexAccess",
                                                    "src": "1583:17:0"
                                                  }
                                                ],
                                                "id": 177,
                                                "name": "MemberAccess",
                                                "src": "1583:23:0"
                                              }
                                            ],
                                            "id": 178,
                                            "name": "BinaryOperation",
                                            "src": "1561:45:0"
                                          },
                                          {
                                            "children": [
                                              {
                                                "attributes": {
                                                  "assignments": [
                                                    180
                                                  ]
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "constant": false,
                                                      "mutability": "mutable",
                                                      "name": "orderToMove",
                                                      "scope": 203,
                                                      "stateVariable": false,
                                                      "storageLocation": "memory",
                                                      "type": "struct Dex.Order",
                                                      "visibility": "internal"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "name": "Order",
                                                          "referencedDeclaration": 24,
                                                          "type": "struct Dex.Order"
                                                        },
                                                        "id": 179,
                                                        "name": "UserDefinedTypeName",
                                                        "src": "1695:5:0"
                                                      }
                                                    ],
                                                    "id": 180,
                                                    "name": "VariableDeclaration",
                                                    "src": "1695:24:0"
                                                  },
                                                  {
                                                    "attributes": {
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "type": "struct Dex.Order storage ref"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 104,
                                                          "type": "struct Dex.Order storage ref[] storage pointer",
                                                          "value": "orders"
                                                        },
                                                        "id": 181,
                                                        "name": "Identifier",
                                                        "src": "1722:6:0"
                                                      },
                                                      {
                                                        "attributes": {
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 133,
                                                          "type": "uint256",
                                                          "value": "index"
                                                        },
                                                        "id": 182,
                                                        "name": "Identifier",
                                                        "src": "1729:5:0"
                                                      }
                                                    ],
                                                    "id": 183,
                                                    "name": "IndexAccess",
                                                    "src": "1722:13:0"
                                                  }
                                                ],
                                                "id": 184,
                                                "name": "VariableDeclarationStatement",
                                                "src": "1695:40:0"
                                              },
                                              {
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "operator": "=",
                                                      "type": "struct Dex.Order storage ref"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "isConstant": false,
                                                          "isLValue": true,
                                                          "isPure": false,
                                                          "lValueRequested": true,
                                                          "type": "struct Dex.Order storage ref"
                                                        },
                                                        "children": [
                                                          {
                                                            "attributes": {
                                                              "overloadedDeclarations": [
                                                                null
                                                              ],
                                                              "referencedDeclaration": 104,
                                                              "type": "struct Dex.Order storage ref[] storage pointer",
                                                              "value": "orders"
                                                            },
                                                            "id": 185,
                                                            "name": "Identifier",
                                                            "src": "1758:6:0"
                                                          },
                                                          {
                                                            "attributes": {
                                                              "overloadedDeclarations": [
                                                                null
                                                              ],
                                                              "referencedDeclaration": 133,
                                                              "type": "uint256",
                                                              "value": "index"
                                                            },
                                                            "id": 186,
                                                            "name": "Identifier",
                                                            "src": "1765:5:0"
                                                          }
                                                        ],
                                                        "id": 187,
                                                        "name": "IndexAccess",
                                                        "src": "1758:13:0"
                                                      },
                                                      {
                                                        "attributes": {
                                                          "isConstant": false,
                                                          "isLValue": true,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "type": "struct Dex.Order storage ref"
                                                        },
                                                        "children": [
                                                          {
                                                            "attributes": {
                                                              "overloadedDeclarations": [
                                                                null
                                                              ],
                                                              "referencedDeclaration": 104,
                                                              "type": "struct Dex.Order storage ref[] storage pointer",
                                                              "value": "orders"
                                                            },
                                                            "id": 188,
                                                            "name": "Identifier",
                                                            "src": "1774:6:0"
                                                          },
                                                          {
                                                            "attributes": {
                                                              "commonType": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                              },
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": false,
                                                              "lValueRequested": false,
                                                              "operator": "-",
                                                              "type": "uint256"
                                                            },
                                                            "children": [
                                                              {
                                                                "attributes": {
                                                                  "overloadedDeclarations": [
                                                                    null
                                                                  ],
                                                                  "referencedDeclaration": 133,
                                                                  "type": "uint256",
                                                                  "value": "index"
                                                                },
                                                                "id": 189,
                                                                "name": "Identifier",
                                                                "src": "1781:5:0"
                                                              },
                                                              {
                                                                "attributes": {
                                                                  "hexvalue": "31",
                                                                  "isConstant": false,
                                                                  "isLValue": false,
                                                                  "isPure": true,
                                                                  "lValueRequested": false,
                                                                  "token": "number",
                                                                  "type": "int_const 1",
                                                                  "value": "1"
                                                                },
                                                                "id": 190,
                                                                "name": "Literal",
                                                                "src": "1789:1:0"
                                                              }
                                                            ],
                                                            "id": 191,
                                                            "name": "BinaryOperation",
                                                            "src": "1781:9:0"
                                                          }
                                                        ],
                                                        "id": 192,
                                                        "name": "IndexAccess",
                                                        "src": "1774:17:0"
                                                      }
                                                    ],
                                                    "id": 193,
                                                    "name": "Assignment",
                                                    "src": "1758:33:0"
                                                  }
                                                ],
                                                "id": 194,
                                                "name": "ExpressionStatement",
                                                "src": "1758:33:0"
                                              },
                                              {
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "operator": "=",
                                                      "type": "struct Dex.Order storage ref"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "isConstant": false,
                                                          "isLValue": true,
                                                          "isPure": false,
                                                          "lValueRequested": true,
                                                          "type": "struct Dex.Order storage ref"
                                                        },
                                                        "children": [
                                                          {
                                                            "attributes": {
                                                              "overloadedDeclarations": [
                                                                null
                                                              ],
                                                              "referencedDeclaration": 104,
                                                              "type": "struct Dex.Order storage ref[] storage pointer",
                                                              "value": "orders"
                                                            },
                                                            "id": 195,
                                                            "name": "Identifier",
                                                            "src": "1814:6:0"
                                                          },
                                                          {
                                                            "attributes": {
                                                              "commonType": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                              },
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": false,
                                                              "lValueRequested": false,
                                                              "operator": "-",
                                                              "type": "uint256"
                                                            },
                                                            "children": [
                                                              {
                                                                "attributes": {
                                                                  "overloadedDeclarations": [
                                                                    null
                                                                  ],
                                                                  "referencedDeclaration": 133,
                                                                  "type": "uint256",
                                                                  "value": "index"
                                                                },
                                                                "id": 196,
                                                                "name": "Identifier",
                                                                "src": "1821:5:0"
                                                              },
                                                              {
                                                                "attributes": {
                                                                  "hexvalue": "31",
                                                                  "isConstant": false,
                                                                  "isLValue": false,
                                                                  "isPure": true,
                                                                  "lValueRequested": false,
                                                                  "token": "number",
                                                                  "type": "int_const 1",
                                                                  "value": "1"
                                                                },
                                                                "id": 197,
                                                                "name": "Literal",
                                                                "src": "1829:1:0"
                                                              }
                                                            ],
                                                            "id": 198,
                                                            "name": "BinaryOperation",
                                                            "src": "1821:9:0"
                                                          }
                                                        ],
                                                        "id": 199,
                                                        "name": "IndexAccess",
                                                        "src": "1814:17:0"
                                                      },
                                                      {
                                                        "attributes": {
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 180,
                                                          "type": "struct Dex.Order memory",
                                                          "value": "orderToMove"
                                                        },
                                                        "id": 200,
                                                        "name": "Identifier",
                                                        "src": "1834:11:0"
                                                      }
                                                    ],
                                                    "id": 201,
                                                    "name": "Assignment",
                                                    "src": "1814:31:0"
                                                  }
                                                ],
                                                "id": 202,
                                                "name": "ExpressionStatement",
                                                "src": "1814:31:0"
                                              }
                                            ],
                                            "id": 203,
                                            "name": "Block",
                                            "src": "1607:258:0"
                                          }
                                        ],
                                        "id": 204,
                                        "name": "IfStatement",
                                        "src": "1558:307:0"
                                      }
                                    ],
                                    "id": 205,
                                    "name": "IfStatement",
                                    "src": "1404:461:0"
                                  }
                                ],
                                "id": 206,
                                "name": "Block",
                                "src": "1385:495:0"
                              }
                            ],
                            "id": 207,
                            "name": "ForStatement",
                            "src": "1329:551:0"
                          }
                        ],
                        "id": 208,
                        "name": "Block",
                        "src": "1314:577:0"
                      },
                      {
                        "attributes": {},
                        "children": [
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_enum$_Side_$11",
                                "typeString": "enum Dex.Side"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 55,
                                  "type": "enum Dex.Side",
                                  "value": "_side"
                                },
                                "id": 209,
                                "name": "Identifier",
                                "src": "1909:5:0"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "member_name": "SELL",
                                  "type": "enum Dex.Side"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 11,
                                      "type": "type(enum Dex.Side)",
                                      "value": "Side"
                                    },
                                    "id": 210,
                                    "name": "Identifier",
                                    "src": "1918:4:0"
                                  }
                                ],
                                "id": 211,
                                "name": "MemberAccess",
                                "src": "1918:9:0"
                              }
                            ],
                            "id": 212,
                            "name": "BinaryOperation",
                            "src": "1909:18:0"
                          },
                          {
                            "children": [
                              {
                                "children": [
                                  {
                                    "attributes": {
                                      "assignments": [
                                        214
                                      ]
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "constant": false,
                                          "mutability": "mutable",
                                          "name": "index",
                                          "scope": 288,
                                          "stateVariable": false,
                                          "storageLocation": "default",
                                          "type": "uint256",
                                          "visibility": "internal"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "name": "uint256",
                                              "type": "uint256"
                                            },
                                            "id": 213,
                                            "name": "ElementaryTypeName",
                                            "src": "1948:7:0"
                                          }
                                        ],
                                        "id": 214,
                                        "name": "VariableDeclaration",
                                        "src": "1948:13:0"
                                      },
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "length",
                                          "type": "uint256"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 104,
                                              "type": "struct Dex.Order storage ref[] storage pointer",
                                              "value": "orders"
                                            },
                                            "id": 215,
                                            "name": "Identifier",
                                            "src": "1964:6:0"
                                          }
                                        ],
                                        "id": 216,
                                        "name": "MemberAccess",
                                        "src": "1964:13:0"
                                      }
                                    ],
                                    "id": 217,
                                    "name": "VariableDeclarationStatement",
                                    "src": "1948:29:0"
                                  },
                                  {
                                    "attributes": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "operator": ">",
                                      "type": "bool"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 214,
                                          "type": "uint256",
                                          "value": "index"
                                        },
                                        "id": 218,
                                        "name": "Identifier",
                                        "src": "1979:5:0"
                                      },
                                      {
                                        "attributes": {
                                          "hexvalue": "30",
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "token": "number",
                                          "type": "int_const 0",
                                          "value": "0"
                                        },
                                        "id": 219,
                                        "name": "Literal",
                                        "src": "1987:1:0"
                                      }
                                    ],
                                    "id": 220,
                                    "name": "BinaryOperation",
                                    "src": "1979:9:0"
                                  },
                                  {
                                    "children": [
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "operator": "--",
                                          "prefix": false,
                                          "type": "uint256"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 214,
                                              "type": "uint256",
                                              "value": "index"
                                            },
                                            "id": 221,
                                            "name": "Identifier",
                                            "src": "1990:5:0"
                                          }
                                        ],
                                        "id": 222,
                                        "name": "UnaryOperation",
                                        "src": "1990:7:0"
                                      }
                                    ],
                                    "id": 223,
                                    "name": "ExpressionStatement",
                                    "src": "1990:7:0"
                                  },
                                  {
                                    "children": [
                                      {
                                        "children": [
                                          {
                                            "attributes": {
                                              "commonType": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              },
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "operator": "||",
                                              "type": "bool"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  },
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "operator": ">",
                                                  "type": "bool"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "member_name": "price",
                                                      "referencedDeclaration": 23,
                                                      "type": "uint256"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "isConstant": false,
                                                          "isLValue": true,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "type": "struct Dex.Order storage ref"
                                                        },
                                                        "children": [
                                                          {
                                                            "attributes": {
                                                              "overloadedDeclarations": [
                                                                null
                                                              ],
                                                              "referencedDeclaration": 104,
                                                              "type": "struct Dex.Order storage ref[] storage pointer",
                                                              "value": "orders"
                                                            },
                                                            "id": 224,
                                                            "name": "Identifier",
                                                            "src": "2022:6:0"
                                                          },
                                                          {
                                                            "attributes": {
                                                              "overloadedDeclarations": [
                                                                null
                                                              ],
                                                              "referencedDeclaration": 214,
                                                              "type": "uint256",
                                                              "value": "index"
                                                            },
                                                            "id": 225,
                                                            "name": "Identifier",
                                                            "src": "2029:5:0"
                                                          }
                                                        ],
                                                        "id": 226,
                                                        "name": "IndexAccess",
                                                        "src": "2022:13:0"
                                                      }
                                                    ],
                                                    "id": 227,
                                                    "name": "MemberAccess",
                                                    "src": "2022:19:0"
                                                  },
                                                  {
                                                    "attributes": {
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "member_name": "price",
                                                      "referencedDeclaration": 23,
                                                      "type": "uint256"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "isConstant": false,
                                                          "isLValue": true,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "type": "struct Dex.Order storage ref"
                                                        },
                                                        "children": [
                                                          {
                                                            "attributes": {
                                                              "overloadedDeclarations": [
                                                                null
                                                              ],
                                                              "referencedDeclaration": 104,
                                                              "type": "struct Dex.Order storage ref[] storage pointer",
                                                              "value": "orders"
                                                            },
                                                            "id": 228,
                                                            "name": "Identifier",
                                                            "src": "2044:6:0"
                                                          },
                                                          {
                                                            "attributes": {
                                                              "commonType": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                              },
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": false,
                                                              "lValueRequested": false,
                                                              "operator": "-",
                                                              "type": "uint256"
                                                            },
                                                            "children": [
                                                              {
                                                                "attributes": {
                                                                  "overloadedDeclarations": [
                                                                    null
                                                                  ],
                                                                  "referencedDeclaration": 214,
                                                                  "type": "uint256",
                                                                  "value": "index"
                                                                },
                                                                "id": 229,
                                                                "name": "Identifier",
                                                                "src": "2051:5:0"
                                                              },
                                                              {
                                                                "attributes": {
                                                                  "hexvalue": "31",
                                                                  "isConstant": false,
                                                                  "isLValue": false,
                                                                  "isPure": true,
                                                                  "lValueRequested": false,
                                                                  "token": "number",
                                                                  "type": "int_const 1",
                                                                  "value": "1"
                                                                },
                                                                "id": 230,
                                                                "name": "Literal",
                                                                "src": "2059:1:0"
                                                              }
                                                            ],
                                                            "id": 231,
                                                            "name": "BinaryOperation",
                                                            "src": "2051:9:0"
                                                          }
                                                        ],
                                                        "id": 232,
                                                        "name": "IndexAccess",
                                                        "src": "2044:17:0"
                                                      }
                                                    ],
                                                    "id": 233,
                                                    "name": "MemberAccess",
                                                    "src": "2044:23:0"
                                                  }
                                                ],
                                                "id": 234,
                                                "name": "BinaryOperation",
                                                "src": "2022:45:0"
                                              },
                                              {
                                                "attributes": {
                                                  "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  },
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "operator": "==",
                                                  "type": "bool"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "member_name": "price",
                                                      "referencedDeclaration": 23,
                                                      "type": "uint256"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "isConstant": false,
                                                          "isLValue": true,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "type": "struct Dex.Order storage ref"
                                                        },
                                                        "children": [
                                                          {
                                                            "attributes": {
                                                              "overloadedDeclarations": [
                                                                null
                                                              ],
                                                              "referencedDeclaration": 104,
                                                              "type": "struct Dex.Order storage ref[] storage pointer",
                                                              "value": "orders"
                                                            },
                                                            "id": 235,
                                                            "name": "Identifier",
                                                            "src": "2071:6:0"
                                                          },
                                                          {
                                                            "attributes": {
                                                              "overloadedDeclarations": [
                                                                null
                                                              ],
                                                              "referencedDeclaration": 214,
                                                              "type": "uint256",
                                                              "value": "index"
                                                            },
                                                            "id": 236,
                                                            "name": "Identifier",
                                                            "src": "2078:5:0"
                                                          }
                                                        ],
                                                        "id": 237,
                                                        "name": "IndexAccess",
                                                        "src": "2071:13:0"
                                                      }
                                                    ],
                                                    "id": 238,
                                                    "name": "MemberAccess",
                                                    "src": "2071:19:0"
                                                  },
                                                  {
                                                    "attributes": {
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "member_name": "price",
                                                      "referencedDeclaration": 23,
                                                      "type": "uint256"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "isConstant": false,
                                                          "isLValue": true,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "type": "struct Dex.Order storage ref"
                                                        },
                                                        "children": [
                                                          {
                                                            "attributes": {
                                                              "overloadedDeclarations": [
                                                                null
                                                              ],
                                                              "referencedDeclaration": 104,
                                                              "type": "struct Dex.Order storage ref[] storage pointer",
                                                              "value": "orders"
                                                            },
                                                            "id": 239,
                                                            "name": "Identifier",
                                                            "src": "2094:6:0"
                                                          },
                                                          {
                                                            "attributes": {
                                                              "commonType": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                              },
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": false,
                                                              "lValueRequested": false,
                                                              "operator": "-",
                                                              "type": "uint256"
                                                            },
                                                            "children": [
                                                              {
                                                                "attributes": {
                                                                  "overloadedDeclarations": [
                                                                    null
                                                                  ],
                                                                  "referencedDeclaration": 214,
                                                                  "type": "uint256",
                                                                  "value": "index"
                                                                },
                                                                "id": 240,
                                                                "name": "Identifier",
                                                                "src": "2101:5:0"
                                                              },
                                                              {
                                                                "attributes": {
                                                                  "hexvalue": "31",
                                                                  "isConstant": false,
                                                                  "isLValue": false,
                                                                  "isPure": true,
                                                                  "lValueRequested": false,
                                                                  "token": "number",
                                                                  "type": "int_const 1",
                                                                  "value": "1"
                                                                },
                                                                "id": 241,
                                                                "name": "Literal",
                                                                "src": "2109:1:0"
                                                              }
                                                            ],
                                                            "id": 242,
                                                            "name": "BinaryOperation",
                                                            "src": "2101:9:0"
                                                          }
                                                        ],
                                                        "id": 243,
                                                        "name": "IndexAccess",
                                                        "src": "2094:17:0"
                                                      }
                                                    ],
                                                    "id": 244,
                                                    "name": "MemberAccess",
                                                    "src": "2094:23:0"
                                                  }
                                                ],
                                                "id": 245,
                                                "name": "BinaryOperation",
                                                "src": "2071:46:0"
                                              }
                                            ],
                                            "id": 246,
                                            "name": "BinaryOperation",
                                            "src": "2022:95:0"
                                          },
                                          {
                                            "children": [
                                              {
                                                "id": 247,
                                                "name": "Break",
                                                "src": "2141:5:0"
                                              }
                                            ],
                                            "id": 248,
                                            "name": "Block",
                                            "src": "2118:48:0"
                                          },
                                          {
                                            "attributes": {},
                                            "children": [
                                              {
                                                "attributes": {
                                                  "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  },
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "operator": "<",
                                                  "type": "bool"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "member_name": "price",
                                                      "referencedDeclaration": 23,
                                                      "type": "uint256"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "isConstant": false,
                                                          "isLValue": true,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "type": "struct Dex.Order storage ref"
                                                        },
                                                        "children": [
                                                          {
                                                            "attributes": {
                                                              "overloadedDeclarations": [
                                                                null
                                                              ],
                                                              "referencedDeclaration": 104,
                                                              "type": "struct Dex.Order storage ref[] storage pointer",
                                                              "value": "orders"
                                                            },
                                                            "id": 249,
                                                            "name": "Identifier",
                                                            "src": "2175:6:0"
                                                          },
                                                          {
                                                            "attributes": {
                                                              "overloadedDeclarations": [
                                                                null
                                                              ],
                                                              "referencedDeclaration": 214,
                                                              "type": "uint256",
                                                              "value": "index"
                                                            },
                                                            "id": 250,
                                                            "name": "Identifier",
                                                            "src": "2182:5:0"
                                                          }
                                                        ],
                                                        "id": 251,
                                                        "name": "IndexAccess",
                                                        "src": "2175:13:0"
                                                      }
                                                    ],
                                                    "id": 252,
                                                    "name": "MemberAccess",
                                                    "src": "2175:19:0"
                                                  },
                                                  {
                                                    "attributes": {
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "member_name": "price",
                                                      "referencedDeclaration": 23,
                                                      "type": "uint256"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "isConstant": false,
                                                          "isLValue": true,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "type": "struct Dex.Order storage ref"
                                                        },
                                                        "children": [
                                                          {
                                                            "attributes": {
                                                              "overloadedDeclarations": [
                                                                null
                                                              ],
                                                              "referencedDeclaration": 104,
                                                              "type": "struct Dex.Order storage ref[] storage pointer",
                                                              "value": "orders"
                                                            },
                                                            "id": 253,
                                                            "name": "Identifier",
                                                            "src": "2197:6:0"
                                                          },
                                                          {
                                                            "attributes": {
                                                              "commonType": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                              },
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": false,
                                                              "lValueRequested": false,
                                                              "operator": "-",
                                                              "type": "uint256"
                                                            },
                                                            "children": [
                                                              {
                                                                "attributes": {
                                                                  "overloadedDeclarations": [
                                                                    null
                                                                  ],
                                                                  "referencedDeclaration": 214,
                                                                  "type": "uint256",
                                                                  "value": "index"
                                                                },
                                                                "id": 254,
                                                                "name": "Identifier",
                                                                "src": "2204:5:0"
                                                              },
                                                              {
                                                                "attributes": {
                                                                  "hexvalue": "31",
                                                                  "isConstant": false,
                                                                  "isLValue": false,
                                                                  "isPure": true,
                                                                  "lValueRequested": false,
                                                                  "token": "number",
                                                                  "type": "int_const 1",
                                                                  "value": "1"
                                                                },
                                                                "id": 255,
                                                                "name": "Literal",
                                                                "src": "2212:1:0"
                                                              }
                                                            ],
                                                            "id": 256,
                                                            "name": "BinaryOperation",
                                                            "src": "2204:9:0"
                                                          }
                                                        ],
                                                        "id": 257,
                                                        "name": "IndexAccess",
                                                        "src": "2197:17:0"
                                                      }
                                                    ],
                                                    "id": 258,
                                                    "name": "MemberAccess",
                                                    "src": "2197:23:0"
                                                  }
                                                ],
                                                "id": 259,
                                                "name": "BinaryOperation",
                                                "src": "2175:45:0"
                                              },
                                              {
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "assignments": [
                                                        261
                                                      ]
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "constant": false,
                                                          "mutability": "mutable",
                                                          "name": "orderToMove",
                                                          "scope": 284,
                                                          "stateVariable": false,
                                                          "storageLocation": "memory",
                                                          "type": "struct Dex.Order",
                                                          "visibility": "internal"
                                                        },
                                                        "children": [
                                                          {
                                                            "attributes": {
                                                              "name": "Order",
                                                              "referencedDeclaration": 24,
                                                              "type": "struct Dex.Order"
                                                            },
                                                            "id": 260,
                                                            "name": "UserDefinedTypeName",
                                                            "src": "2309:5:0"
                                                          }
                                                        ],
                                                        "id": 261,
                                                        "name": "VariableDeclaration",
                                                        "src": "2309:24:0"
                                                      },
                                                      {
                                                        "attributes": {
                                                          "isConstant": false,
                                                          "isLValue": true,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "type": "struct Dex.Order storage ref"
                                                        },
                                                        "children": [
                                                          {
                                                            "attributes": {
                                                              "overloadedDeclarations": [
                                                                null
                                                              ],
                                                              "referencedDeclaration": 104,
                                                              "type": "struct Dex.Order storage ref[] storage pointer",
                                                              "value": "orders"
                                                            },
                                                            "id": 262,
                                                            "name": "Identifier",
                                                            "src": "2336:6:0"
                                                          },
                                                          {
                                                            "attributes": {
                                                              "overloadedDeclarations": [
                                                                null
                                                              ],
                                                              "referencedDeclaration": 214,
                                                              "type": "uint256",
                                                              "value": "index"
                                                            },
                                                            "id": 263,
                                                            "name": "Identifier",
                                                            "src": "2343:5:0"
                                                          }
                                                        ],
                                                        "id": 264,
                                                        "name": "IndexAccess",
                                                        "src": "2336:13:0"
                                                      }
                                                    ],
                                                    "id": 265,
                                                    "name": "VariableDeclarationStatement",
                                                    "src": "2309:40:0"
                                                  },
                                                  {
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "operator": "=",
                                                          "type": "struct Dex.Order storage ref"
                                                        },
                                                        "children": [
                                                          {
                                                            "attributes": {
                                                              "isConstant": false,
                                                              "isLValue": true,
                                                              "isPure": false,
                                                              "lValueRequested": true,
                                                              "type": "struct Dex.Order storage ref"
                                                            },
                                                            "children": [
                                                              {
                                                                "attributes": {
                                                                  "overloadedDeclarations": [
                                                                    null
                                                                  ],
                                                                  "referencedDeclaration": 104,
                                                                  "type": "struct Dex.Order storage ref[] storage pointer",
                                                                  "value": "orders"
                                                                },
                                                                "id": 266,
                                                                "name": "Identifier",
                                                                "src": "2372:6:0"
                                                              },
                                                              {
                                                                "attributes": {
                                                                  "overloadedDeclarations": [
                                                                    null
                                                                  ],
                                                                  "referencedDeclaration": 214,
                                                                  "type": "uint256",
                                                                  "value": "index"
                                                                },
                                                                "id": 267,
                                                                "name": "Identifier",
                                                                "src": "2379:5:0"
                                                              }
                                                            ],
                                                            "id": 268,
                                                            "name": "IndexAccess",
                                                            "src": "2372:13:0"
                                                          },
                                                          {
                                                            "attributes": {
                                                              "isConstant": false,
                                                              "isLValue": true,
                                                              "isPure": false,
                                                              "lValueRequested": false,
                                                              "type": "struct Dex.Order storage ref"
                                                            },
                                                            "children": [
                                                              {
                                                                "attributes": {
                                                                  "overloadedDeclarations": [
                                                                    null
                                                                  ],
                                                                  "referencedDeclaration": 104,
                                                                  "type": "struct Dex.Order storage ref[] storage pointer",
                                                                  "value": "orders"
                                                                },
                                                                "id": 269,
                                                                "name": "Identifier",
                                                                "src": "2388:6:0"
                                                              },
                                                              {
                                                                "attributes": {
                                                                  "commonType": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                  },
                                                                  "isConstant": false,
                                                                  "isLValue": false,
                                                                  "isPure": false,
                                                                  "lValueRequested": false,
                                                                  "operator": "-",
                                                                  "type": "uint256"
                                                                },
                                                                "children": [
                                                                  {
                                                                    "attributes": {
                                                                      "overloadedDeclarations": [
                                                                        null
                                                                      ],
                                                                      "referencedDeclaration": 214,
                                                                      "type": "uint256",
                                                                      "value": "index"
                                                                    },
                                                                    "id": 270,
                                                                    "name": "Identifier",
                                                                    "src": "2395:5:0"
                                                                  },
                                                                  {
                                                                    "attributes": {
                                                                      "hexvalue": "31",
                                                                      "isConstant": false,
                                                                      "isLValue": false,
                                                                      "isPure": true,
                                                                      "lValueRequested": false,
                                                                      "token": "number",
                                                                      "type": "int_const 1",
                                                                      "value": "1"
                                                                    },
                                                                    "id": 271,
                                                                    "name": "Literal",
                                                                    "src": "2403:1:0"
                                                                  }
                                                                ],
                                                                "id": 272,
                                                                "name": "BinaryOperation",
                                                                "src": "2395:9:0"
                                                              }
                                                            ],
                                                            "id": 273,
                                                            "name": "IndexAccess",
                                                            "src": "2388:17:0"
                                                          }
                                                        ],
                                                        "id": 274,
                                                        "name": "Assignment",
                                                        "src": "2372:33:0"
                                                      }
                                                    ],
                                                    "id": 275,
                                                    "name": "ExpressionStatement",
                                                    "src": "2372:33:0"
                                                  },
                                                  {
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "operator": "=",
                                                          "type": "struct Dex.Order storage ref"
                                                        },
                                                        "children": [
                                                          {
                                                            "attributes": {
                                                              "isConstant": false,
                                                              "isLValue": true,
                                                              "isPure": false,
                                                              "lValueRequested": true,
                                                              "type": "struct Dex.Order storage ref"
                                                            },
                                                            "children": [
                                                              {
                                                                "attributes": {
                                                                  "overloadedDeclarations": [
                                                                    null
                                                                  ],
                                                                  "referencedDeclaration": 104,
                                                                  "type": "struct Dex.Order storage ref[] storage pointer",
                                                                  "value": "orders"
                                                                },
                                                                "id": 276,
                                                                "name": "Identifier",
                                                                "src": "2428:6:0"
                                                              },
                                                              {
                                                                "attributes": {
                                                                  "commonType": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                  },
                                                                  "isConstant": false,
                                                                  "isLValue": false,
                                                                  "isPure": false,
                                                                  "lValueRequested": false,
                                                                  "operator": "-",
                                                                  "type": "uint256"
                                                                },
                                                                "children": [
                                                                  {
                                                                    "attributes": {
                                                                      "overloadedDeclarations": [
                                                                        null
                                                                      ],
                                                                      "referencedDeclaration": 214,
                                                                      "type": "uint256",
                                                                      "value": "index"
                                                                    },
                                                                    "id": 277,
                                                                    "name": "Identifier",
                                                                    "src": "2435:5:0"
                                                                  },
                                                                  {
                                                                    "attributes": {
                                                                      "hexvalue": "31",
                                                                      "isConstant": false,
                                                                      "isLValue": false,
                                                                      "isPure": true,
                                                                      "lValueRequested": false,
                                                                      "token": "number",
                                                                      "type": "int_const 1",
                                                                      "value": "1"
                                                                    },
                                                                    "id": 278,
                                                                    "name": "Literal",
                                                                    "src": "2443:1:0"
                                                                  }
                                                                ],
                                                                "id": 279,
                                                                "name": "BinaryOperation",
                                                                "src": "2435:9:0"
                                                              }
                                                            ],
                                                            "id": 280,
                                                            "name": "IndexAccess",
                                                            "src": "2428:17:0"
                                                          },
                                                          {
                                                            "attributes": {
                                                              "overloadedDeclarations": [
                                                                null
                                                              ],
                                                              "referencedDeclaration": 261,
                                                              "type": "struct Dex.Order memory",
                                                              "value": "orderToMove"
                                                            },
                                                            "id": 281,
                                                            "name": "Identifier",
                                                            "src": "2448:11:0"
                                                          }
                                                        ],
                                                        "id": 282,
                                                        "name": "Assignment",
                                                        "src": "2428:31:0"
                                                      }
                                                    ],
                                                    "id": 283,
                                                    "name": "ExpressionStatement",
                                                    "src": "2428:31:0"
                                                  }
                                                ],
                                                "id": 284,
                                                "name": "Block",
                                                "src": "2221:258:0"
                                              }
                                            ],
                                            "id": 285,
                                            "name": "IfStatement",
                                            "src": "2172:307:0"
                                          }
                                        ],
                                        "id": 286,
                                        "name": "IfStatement",
                                        "src": "2018:461:0"
                                      }
                                    ],
                                    "id": 287,
                                    "name": "Block",
                                    "src": "1999:495:0"
                                  }
                                ],
                                "id": 288,
                                "name": "ForStatement",
                                "src": "1943:551:0"
                              }
                            ],
                            "id": 289,
                            "name": "Block",
                            "src": "1928:577:0"
                          }
                        ],
                        "id": 290,
                        "name": "IfStatement",
                        "src": "1906:599:0"
                      }
                    ],
                    "id": 291,
                    "name": "IfStatement",
                    "src": "1293:1212:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "++",
                          "prefix": false,
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 26,
                              "type": "uint256",
                              "value": "nextOrderId"
                            },
                            "id": 292,
                            "name": "Identifier",
                            "src": "2515:11:0"
                          }
                        ],
                        "id": 293,
                        "name": "UnaryOperation",
                        "src": "2515:13:0"
                      }
                    ],
                    "id": 294,
                    "name": "ExpressionStatement",
                    "src": "2515:13:0"
                  }
                ],
                "id": 295,
                "name": "Block",
                "src": "791:1745:0"
              }
            ],
            "id": 296,
            "name": "FunctionDefinition",
            "src": "702:1834:0"
          }
        ],
        "id": 297,
        "name": "ContractDefinition",
        "src": "129:2410:0"
      }
    ],
    "id": 298,
    "name": "SourceUnit",
    "src": "33:2506:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.6+commit.7338295f.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.3",
  "updatedAt": "2021-03-12T20:04:00.563Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}